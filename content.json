{"meta":{"title":"Hexotest","subtitle":"hei","description":"ha","author":"Maydaychen","url":"https://maydaychen.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2024-12-10T13:33:21.481Z","updated":"2023-08-12T02:08:42.446Z","comments":false,"path":"/404.html","permalink":"https://maydaychen.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2024-12-10T13:33:21.470Z","updated":"2024-03-16T13:15:04.433Z","comments":false,"path":"about/index.html","permalink":"https://maydaychen.github.io/about/index.html","excerpt":"","text":"一个用于记录自己成长的网站所有的文章都会带有自己的思考内容比较杂，关于开发，运维，摄影，智能家居，数码，旅行，感兴趣的都会记下来 网站更新：20230827 —— 开始尝试建站202311 —— 疯狂输出20240315 —— 把之前写的文章从其他平台搬运过来20240316 —— 评论系统搞定了，还请尽情骂我吧！20240316 —— 一鼓作气，图床搞定了，七牛云 + PicGo，嘎嘎够用了 Todo-list[Done] 评论系统好像挂了？—— 20240316搞定 问题记录: https://maydaychen.github.io/2024/03/16/Hexo-valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3404%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/ [Done] 图床得修改一下，研究下怎么弄合适 —— 20240316搞定 这篇文章讲得不错：https://blog.csdn.net/ppap5/article/details/132643213 [Todo] 哭了，图裂了，难道是http的问题？ [InProgress] 文章搬运 (自己原创的!) 并修改格式"},{"title":"书单","date":"2024-12-10T13:33:24.242Z","updated":"2023-08-12T02:08:42.447Z","comments":false,"path":"books/index.html","permalink":"https://maydaychen.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2024-12-10T13:33:24.236Z","updated":"2023-08-12T02:08:42.447Z","comments":false,"path":"categories/index.html","permalink":"https://maydaychen.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2024-12-10T13:33:24.238Z","updated":"2023-08-12T02:08:42.447Z","comments":true,"path":"links/index.html","permalink":"https://maydaychen.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2024-12-10T13:33:25.576Z","updated":"2023-08-12T02:08:42.447Z","comments":false,"path":"repository/index.html","permalink":"https://maydaychen.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-12-10T13:33:24.434Z","updated":"2023-08-12T02:08:42.447Z","comments":false,"path":"tags/index.html","permalink":"https://maydaychen.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"群晖DS224plusSHR转basic","slug":"群晖DS224plusSHR转basic","date":"2024-12-10T13:20:24.000Z","updated":"2024-12-11T05:41:37.000Z","comments":true,"path":"2024/12/10/群晖DS224plusSHR转basic/","link":"","permalink":"https://maydaychen.github.io/2024/12/10/%E7%BE%A4%E6%99%96DS224plusSHR%E8%BD%ACbasic/","excerpt":"","text":"为什么要转basic由于买的是群晖DS224+NAS，只有双盘位，导致了如果要组SHR或者Raid的话，就只有一块硬盘的存储空间了，但是吧，由于喜欢拍照+折腾，再加上mac的时光机，导致了存储空间用的很快，没办法，只能痛下决心将之前没经验设置的SHR转成basic模式 准备工作建议备份自己的重要文件，因为数据迁移过程中可能会造成丢失（虽然万幸，我没有） 正式开始 关机，拔出任意一块硬盘，其实不关机个人感觉也可以，毕竟支持热插拔，但是多一事不如少一事 插入刚才那块硬盘，开机，这时候NAS会疯狂报警，建议静音处理 这时候应该有一块是堪用状态，另一块新插入的忘记什么状态了，总之，格式化，创建一个新的存储池 移动共享文件夹如图，直接把所有的共享文件夹从旧的存储空间移动到新的存储空间 移动套件，跟着这个repo一步一步走，甚至可以把docker都给移动过去，就是docker会需要一段时间，比较久https://github.com/007revad/Synology_app_mover?tab=readme-ov-file注意有的套件移动完成后会有提示，需要按照提示修改配置信息 这时候应该大部分的移动都完成了，只需要查漏补缺，如果有没移动的文件，那么手动移动一下就可以了 查看 docker中容器运行情况一般情况下，由于docker的依赖文件路径被修改了，所以会导致docker容器启动报错，需要手动check错误日志并修改对应的配置项 禁用Container Manager套件 使用命令进入&#x2F;volume2&#x2F;@docker&#x2F;containers&#x2F;对应的容器目录 修改config.v2.json 把所有的volume1改成volume2 重启docker 最终步骤这时候其实只需要删除老的存储池和存储空间，并重建，即可拥有两块完全不同的存储池和存储空间，大功告成！","categories":[{"name":"NAS","slug":"NAS","permalink":"https://maydaychen.github.io/categories/NAS/"}],"tags":[{"name":"SHR","slug":"SHR","permalink":"https://maydaychen.github.io/tags/SHR/"},{"name":"群晖","slug":"群晖","permalink":"https://maydaychen.github.io/tags/%E7%BE%A4%E6%99%96/"}]},{"title":"Teams通过Webhook实现mention某人及踩坑记录","slug":"Teams通过Webhook实现@某人及踩坑记录","date":"2024-04-23T15:02:27.000Z","updated":"2024-04-23T15:13:33.495Z","comments":true,"path":"2024/04/23/Teams通过Webhook实现@某人及踩坑记录/","link":"","permalink":"https://maydaychen.github.io/2024/04/23/Teams%E9%80%9A%E8%BF%87Webhook%E5%AE%9E%E7%8E%B0@%E6%9F%90%E4%BA%BA%E5%8F%8A%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/","excerpt":"","text":"背景我们在使用MS Teams进行沟通的时候，肯定会用到webhook进行消息的自动化发送，但是现在有一个需求，有一些消息需要指定@某些人，而不是单纯的发送消息 实现前面我们说了怎么通过python代码进行通知发送，这次只需要改一些代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758import urllib3import jsonhttp = urllib3.PoolManager()def lambda_handler(event, context): # 这是webhook地址 url = &quot;https://xxx.webhook.office.com/webhookb2/xxxxxx&quot; msg = &#123; &quot;type&quot;:&quot;message&quot;, &quot;attachments&quot;:[ &#123; &quot;contentType&quot;:&quot;application/vnd.microsoft.card.adaptive&quot;, &quot;contentUrl&quot;:&#x27;&#x27;, &quot;content&quot;:&#123; &quot;$schema&quot;:&quot;http://adaptivecards.io/schemas/adaptive-card.json&quot;, &quot;type&quot;:&quot;AdaptiveCard&quot;, &quot;version&quot;:&quot;1.2&quot;, &quot;body&quot;: [ &#123; &quot;type&quot;: &quot;TextBlock&quot;, &quot;text&quot;: &quot;Hi &lt;at&gt;Adele UPN&lt;/at&gt;, &lt;at&gt;Adele Microsoft Entra ID&lt;/at&gt;&quot; &#125; ], &quot;msteams&quot;: &#123; &quot;entities&quot;: [ &#123; &quot;type&quot;: &quot;mention&quot;, &quot;text&quot;: &quot;&lt;at&gt;Adele UPN&lt;/at&gt;&quot;, &quot;mentioned&quot;: &#123; &quot;id&quot;: &quot;AdeleV@contoso.onmicrosoft.com&quot;, &quot;name&quot;: &quot;Adele Vance&quot; &#125; &#125;, &#123; &quot;type&quot;: &quot;mention&quot;, &quot;text&quot;: &quot;&lt;at&gt;Adele Microsoft Entra ID&lt;/at&gt;&quot;, &quot;mentioned&quot;: &#123; &quot;id&quot;: &quot;87d349ed-44d7-43e1-9a83-5f2406dee5bd&quot;, &quot;name&quot;: &quot;Adele Vance&quot; &#125; &#125; ] &#125; &#125; &#125; ]&#125; encoded_msg = json.dumps(msg).encode(&quot;utf-8&quot;) resp = http.request(&quot;POST&quot;, url, body=encoded_msg) print( &#123; &quot;message&quot;: event[&quot;Records&quot;][0][&quot;Sns&quot;][&quot;Message&quot;], &quot;status_code&quot;: resp.status, &quot;response&quot;: resp.data, &#125; ) 可以看到一下变更点 body中的TextBlock添加了Adele UPN 字段，其中Adele UPN可以为用户名 添加msteams块，其中指定type为mention， id可以为UserId，也可以为用户邮箱，也可以为MS Entra Object ID,key都是id name字段，可以把变更点1中的用户名改为别的字段，但是不影响@用户的效果 坑点切记！@mention功能不支持Guest账户，也就是说只有在这个Teams中的用户才能被@！","categories":[{"name":"运维","slug":"运维","permalink":"https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"}],"tags":[{"name":"Teams","slug":"Teams","permalink":"https://maydaychen.github.io/tags/Teams/"}]},{"title":"Android-LinearLayout设置selector并将状态传递到子view","slug":"Android-LinearLayout设置selector并将状态传递到子view","date":"2024-03-17T07:57:02.000Z","updated":"2024-03-17T07:59:38.082Z","comments":true,"path":"2024/03/17/Android-LinearLayout设置selector并将状态传递到子view/","link":"","permalink":"https://maydaychen.github.io/2024/03/17/Android-LinearLayout%E8%AE%BE%E7%BD%AEselector%E5%B9%B6%E5%B0%86%E7%8A%B6%E6%80%81%E4%BC%A0%E9%80%92%E5%88%B0%E5%AD%90view/","excerpt":"","text":"在LinearLayout中，如果同时为LinearLayout与子TextView设置selector，是可以实现的，代码如下 123456789101112131415161718192021222324 &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:id=&quot;@+id/ll_company&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;102dp&quot; android:layout_marginStart=&quot;25dp&quot; android:layout_marginEnd=&quot;25dp&quot; android:layout_marginBottom=&quot;20dp&quot; android:background=&quot;@drawable/selector_company&quot; android:clickable=&quot;true&quot; android:focusable=&quot;true&quot; android:focusableInTouchMode=&quot;true&quot;&gt; &lt;TextView android:id=&quot;@+id/tv_company_name&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;match_parent&quot; android:layout_marginStart=&quot;20dp&quot; android:drawableStart=&quot;@mipmap/company_uncheck&quot; android:drawablePadding=&quot;20dp&quot; android:gravity=&quot;center_vertical&quot; android:text=&quot;test&quot; android:textColor=&quot;@drawable/selector_company_text&quot; android:textSize=&quot;19sp&quot; /&gt;&lt;/LinearLayout&gt; selector文件为：selector_company.xml： 1234567891011&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item android:drawable=&quot;@drawable/company_selected&quot; android:state_focused=&quot;true&quot; /&gt; &lt;item android:drawable=&quot;@drawable/company_selected&quot; android:state_checked=&quot;true&quot; /&gt; &lt;item&gt; &lt;shape&gt; &lt;corners android:radius=&quot;15dp&quot; /&gt; &lt;solid android:color=&quot;@color/white&quot; /&gt; &lt;/shape&gt; &lt;/item&gt;&lt;/selector&gt; selector_company_text.xml: 123456&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item android:state_focused=&quot;true&quot; android:color=&quot;@color/white&quot; /&gt; &lt;item android:state_pressed=&quot;true&quot; android:color=&quot;@color/white&quot; /&gt; &lt;item android:color=&quot;@color/title&quot; android:state_checked=&quot;false&quot; /&gt;&lt;/selector&gt; 此时，textview可以响应pressed状态，但是！！ 无法与LinearLayout一样保持focused状态##解决办法：为TextView加上 1android:duplicateParentState=&quot;true&quot; android:duplicateParentState指的是当前控件是否跟随父控件的(点击、焦点等)状态 PS:网上有说用RadioGroup来实现，但是不适用于用RecyclerView展示的LinearLayoutPS2:尝试过使用CheckBox，但是重复点击会有checked跟unchecked状态重复切换，不适用","categories":[{"name":"Android","slug":"Android","permalink":"https://maydaychen.github.io/categories/Android/"}],"tags":[{"name":"事件传递","slug":"事件传递","permalink":"https://maydaychen.github.io/tags/%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92/"}]},{"title":"Android studio 搜索项目中所有中文字符","slug":"Android-studio-搜索项目中所有中文字符","date":"2024-03-17T07:51:23.000Z","updated":"2024-03-17T07:51:23.000Z","comments":true,"path":"2024/03/17/Android-studio-搜索项目中所有中文字符/","link":"","permalink":"https://maydaychen.github.io/2024/03/17/Android-studio-%E6%90%9C%E7%B4%A2%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%89%80%E6%9C%89%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"IDEA全家桶 搜索项目中所有中文字符","slug":"IDEA全家桶搜索项目中所有中文字符","date":"2024-03-17T07:51:23.000Z","updated":"2024-03-17T07:55:18.505Z","comments":true,"path":"2024/03/17/IDEA全家桶搜索项目中所有中文字符/","link":"","permalink":"https://maydaychen.github.io/2024/03/17/IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E6%90%9C%E7%B4%A2%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%89%80%E6%9C%89%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6/","excerpt":"","text":"需求在很多国际性项目中，我们有时候有要求不能出现中文的注释等，全局都要使用英文 但是在开发过程中，为了让自己舒服，肯定是优先选择中文注释，等到正式提交了才会把他们改成英文 那么，这种需求怎么实现呢？ 实现打开全局搜索Edit -&gt; Find -&gt; Find In Path输入正则表达式： 1^((?!(\\*|//)).)+[\\u4e00-\\u9fa5] 即可搜索所有的中文，然后将他们改成英文","categories":[],"tags":[]},{"title":"Hexo-valine评论系统接口404问题解决","slug":"Hexo-valine评论系统接口404问题解决","date":"2024-03-16T09:08:57.000Z","updated":"2024-03-16T09:38:16.669Z","comments":true,"path":"2024/03/16/Hexo-valine评论系统接口404问题解决/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Hexo-valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3404%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/","excerpt":"","text":"问题描述在配置valine评论系统时，突然发现评价无法查看，通过控制台发现是接口404了，很奇怪 问题排查通过F12可以看到，他调用的接口访问信息中是显示他需要访问的Class的，但是我们在LeanCloud中并没有这个Class，所以怀疑是缺少这个Class导致的问题 问题解决在LeanCloud的控制台中，在数据存储-&gt;结构化数据选项中，有一个创建Class的按钮，咱们需要手动创建一个叫做Comment的Class,在创建完成后，刷新博文页面，会发现已经可以查看评论了","categories":[{"name":"博客相关","slug":"博客相关","permalink":"https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://maydaychen.github.io/tags/Hexo/"}]},{"title":"Linux-scp到服务器时报错Permissions 0644 for 'xx.pem' are too open","slug":"Linux-scp到服务器时报错Permissions-0644-for-xx-pem-are-too-open","date":"2024-03-15T16:58:52.000Z","updated":"2024-03-15T16:59:13.464Z","comments":true,"path":"2024/03/16/Linux-scp到服务器时报错Permissions-0644-for-xx-pem-are-too-open/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Linux-scp%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%B6%E6%8A%A5%E9%94%99Permissions-0644-for-xx-pem-are-too-open/","excerpt":"","text":"问题Permissions 0644 for &#39;xx.pem&#39; are too open. It is required that your private key files are NOT accessible by others. This private key will be ignored. Load key &quot;xx.pem&quot;: bad permissions ec2-user@35.77.46.6: Permission denied (publickey,gssapi-keyex,gssapi-with-mic). lost connection 解决方案看日志报出的错误，”Permissions 0644 for ‘xx.pem’ are too open”，pen文件的权限太大太open了。使用ll(ls -al)命令查看了私钥文件的权限，发现和错误一样，是644所以需要使用chmod命令修改文件的权限 chmod 600 xx.pem之后再尝试一遍，完美执行","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[]},{"title":"Linux文件清空的几种方法","slug":"Linux文件清空的几种方法","date":"2024-03-15T16:57:47.000Z","updated":"2024-03-15T16:58:21.437Z","comments":true,"path":"2024/03/16/Linux文件清空的几种方法/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Linux%E6%96%87%E4%BB%B6%E6%B8%85%E7%A9%BA%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/","excerpt":"","text":"使用重定向的方法 12345[root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# &gt; test.txt [root@centos7 ~]# du -h test.txt 0 test.txt 使用true命令重定向清空文件 12345[root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# true &gt; test.txt [root@centos7 ~]# du -h test.txt 0 test.txt 使用cat&#x2F;cp&#x2F;dd命令及&#x2F;dev&#x2F;null设备来清空文件 1234567891011121314151617181920212223[root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# cat /dev/null &gt; test.txt [root@centos7 ~]# du -h test.txt 0 test.txt###################################################[root@centos7 ~]# echo &quot;Hello World&quot; &gt; test.txt [root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# cp /dev/null test.txt cp：是否覆盖&quot;test.txt&quot;？ y[root@centos7 ~]# du -h test.txt 0 test.txt##################################################[root@centos7 ~]# echo &quot;Hello World&quot; &gt; test.txt [root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# dd if=/dev/null of=test.txt 记录了0+0 的读入记录了0+0 的写出0字节(0 B)已复制，0.000266781 秒，0.0 kB/秒[root@centos7 ~]# du -h test.txt 0 test.txt 使用echo命令清空文件 1234567[root@centos7 ~]# echo &quot;Hello World&quot; &gt; test.txt [root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# echo -n &quot;&quot; &gt; test.txt ==&gt;要加上&quot;-n&quot;参数，默认情况下会&quot;&quot;，也就是回车符[root@centos7 ~]# du -h test.txt 0 test.txt 使用truncate命令清空文件 12345[root@centos7 ~]# du -h test.txt 4.0K test.txt[root@centos7 ~]# truncate -s 0 test.txt -s参数用来设定文件的大小，清空文件，就设定为0；[root@centos7 ~]# du -h test.txt 0 test.txt","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[]},{"title":"Zabbix-监控的目标主机默认只显示20条图形(zabbix显示/不全/缺失)","slug":"Zabbix-监控的目标主机默认只显示20条图形-zabbix显示-不全-缺失","date":"2024-03-15T16:45:32.000Z","updated":"2024-03-15T16:45:49.638Z","comments":true,"path":"2024/03/16/Zabbix-监控的目标主机默认只显示20条图形-zabbix显示-不全-缺失/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Zabbix-%E7%9B%91%E6%8E%A7%E7%9A%84%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E9%BB%98%E8%AE%A4%E5%8F%AA%E6%98%BE%E7%A4%BA20%E6%9D%A1%E5%9B%BE%E5%BD%A2-zabbix%E6%98%BE%E7%A4%BA-%E4%B8%8D%E5%85%A8-%E7%BC%BA%E5%A4%B1/","excerpt":"","text":"监控的目标主机默认只显示20条图形 ( zabbix 显示 不全 缺失) 解决方法：sudo vi &#x2F;usr&#x2F;share&#x2F;zabbix&#x2F;include&#x2F;defines.inc.php 修改文件 ZBX_MAX_GRAPHS_P ER_PAGE 这个变量默认是20，把它改成60","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[{"name":"Zabbix","slug":"Zabbix","permalink":"https://maydaychen.github.io/tags/Zabbix/"}]},{"title":"Grafana-Origin not allowed","slug":"Grafana-Origin-not-allowed","date":"2024-03-15T16:44:22.000Z","updated":"2024-03-15T16:45:04.466Z","comments":true,"path":"2024/03/16/Grafana-Origin-not-allowed/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Grafana-Origin-not-allowed/","excerpt":"","text":"上周 Grafana 工作没有任何问题，但更新到 8.3.5 后我无法再登录。在登录屏幕中，输入我的用户名和密码后，会出现一条消息：“Origin not allowed”。 在 grafana.log 文件中，我看到一行：lvl&#x3D;eror msg&#x3D;”无法根据 cookie 查找用户” logger&#x3D;context error&#x3D;”未找到用户令牌” 解决方案：在nginx的conf.d文件中，有一个grafana.conf的文件，需要在配置文件中增加 1proxy_set_header Host $http_host; //added after upgrade from 8.1 to 8.4.1 for origin not allowed error 但是发现还是不行，看到说可以把$http_host改成自己的domain，于是尝试下 1proxy_set_header Host domain.com 最后重启nginx 12sudo systemctl restart nginxsudo systemctl status nginx 然后刷新页面，登录，可以进去了","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[{"name":"Grafana","slug":"Grafana","permalink":"https://maydaychen.github.io/tags/Grafana/"}]},{"title":"Mac-Terminal终端没有ll命令解决办法","slug":"Mac-Terminal终端没有ll命令解决办法","date":"2024-03-15T16:26:52.000Z","updated":"2024-03-15T16:40:36.736Z","comments":true,"path":"2024/03/16/Mac-Terminal终端没有ll命令解决办法/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Mac-Terminal%E7%BB%88%E7%AB%AF%E6%B2%A1%E6%9C%89ll%E5%91%BD%E4%BB%A4%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"首先在 ~&#x2F;.bash_profile 文件中加入如下命令(如果没有就touch一个)alias ll=&#39;ls -alF&#39; 随后执行source ~/.bash_profile命令，使修改生效 这样就可以使用 ll 命令了，但是这样有一个问题，每次新开的终端 ll 命令都会失效 以下是解决方案 在 ～&#x2F;.zshrc 文件中加入如下命令source ~/.bash_profile如果找不到.zshrc 文件，跟上面一样touch一个就完事了 执行source ~/.zshrc使文件生效，之后的每次ll就都会起作用了","categories":[{"name":"Mac","slug":"Mac","permalink":"https://maydaychen.github.io/categories/Mac/"}],"tags":[]},{"title":"Mac-Edge浏览器跟Chrome浏览器触控板无法右击的解决办法","slug":"Mac-Edge浏览器跟Chrome浏览器触控板无法右击的解决办法","date":"2024-03-15T16:25:55.000Z","updated":"2024-03-15T16:27:40.227Z","comments":true,"path":"2024/03/16/Mac-Edge浏览器跟Chrome浏览器触控板无法右击的解决办法/","link":"","permalink":"https://maydaychen.github.io/2024/03/16/Mac-Edge%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%9FChrome%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A7%A6%E6%8E%A7%E6%9D%BF%E6%97%A0%E6%B3%95%E5%8F%B3%E5%87%BB%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"问题不知道从什么时候开始，用mac的触控板，双指点击已经无法在浏览器上跳出右键的那个菜单了，实测edge跟chrome都一样 解决办法经过各种测试，发现是因为我装了一个crxMouse插件，该插件会有一个Linux&#x2F;Mac选项，如果把它去掉勾选，问题解决，所以确定是因为这个至于这是干嘛的，不太确定，不过毕竟现在已经不用鼠标，转投触控板，所以这个插件对我来说也没有什么用了","categories":[{"name":"Mac","slug":"Mac","permalink":"https://maydaychen.github.io/categories/Mac/"}],"tags":[]},{"title":"Alfred 支持edge浏览器书签","slug":"Alfred-支持edge浏览器书签","date":"2024-03-15T09:37:26.000Z","updated":"2024-03-15T09:38:52.000Z","comments":true,"path":"2024/03/15/Alfred-支持edge浏览器书签/","link":"","permalink":"https://maydaychen.github.io/2024/03/15/Alfred-%E6%94%AF%E6%8C%81edge%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE/","excerpt":"","text":"众所周知，在Alfred上只有Safari跟Chrome浏览器的支持，甚至都不可以选择别的浏览器在Alfred 社区里，开发者也是直接说了这两个是mac上的用的人最多的浏览器，目前没有添加其他浏览器书签支持的计划，所以我们只能自己摸索但是说实在的，edge浏览器在国内有着先天的优势，各种同步功能的正常使用已经让它在国内越来越受欢迎，所以加入一个edge浏览器的支持个人认为还是很有必要的 低效方法：装一个Chrome, 然后把edge书签导入过去 好了，不开玩笑了，下面记录一个在社区看到的很好用的方法 正经记录step 1. 还是需要一个chrome浏览器，所以还是装一个吧step 2. link edge’s bookmarks to chromecd ~/Library/Application\\ Support/Google/Chrome/Default//这一步如果新安装的chrome是不需要的，因为没有这个文件 mv Bookmarks Bookmarks_233.bakln -s ~/Library/Application\\ Support/Microsoft\\ Edge/Default/Bookmarks ./Bookmarks贴一个ln -s命令详解https://blog.csdn.net/qianxuedegushi/article/details/108145547 然后再用alfred试一下，可以显示edge的书签了","categories":[{"name":"Tools","slug":"Tools","permalink":"https://maydaychen.github.io/categories/Tools/"}],"tags":[{"name":"Alfred","slug":"Alfred","permalink":"https://maydaychen.github.io/tags/Alfred/"}]},{"title":"Git配置代理","slug":"Git配置代理","date":"2024-03-13T23:05:42.000Z","updated":"2024-03-15T09:58:22.000Z","comments":true,"path":"2024/03/14/Git配置代理/","link":"","permalink":"https://maydaychen.github.io/2024/03/14/Git%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/","excerpt":"","text":"参考文章文章写的很棒，我就是参考这个 配置git代理（带用户名）git config –global http.proxy http://username:pass@server:portgit config –global https.proxy https://username:pass@server:port 打开git配置文件1open ~/.gitconfig","categories":[{"name":"Tools","slug":"Tools","permalink":"https://maydaychen.github.io/categories/Tools/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://maydaychen.github.io/tags/Git/"}]},{"title":"Linux相关简易操作汇总","slug":"Linux相关简易操作汇总","date":"2024-02-15T07:22:23.000Z","updated":"2024-03-15T09:58:54.000Z","comments":true,"path":"2024/02/15/Linux相关简易操作汇总/","link":"","permalink":"https://maydaychen.github.io/2024/02/15/Linux%E7%9B%B8%E5%85%B3%E7%AE%80%E6%98%93%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/","excerpt":"","text":"Ubuntu获取root权限 输入命令：sudo su; 屏幕上会回显要求输入当前用户密码的提示，输入密码即可获得管理员权限; 若想退出管理员权限可输入命令：su 用户名. Ubuntu vim显示行数 进入终端，在命令行中输入cd &#x2F;etc&#x2F;vim 后敲回车，进入&#x2F;etc&#x2F;vim目录； 进入etc&#x2F;vim目录后，找到vimrc文件（vim的初始化文件），使用cp命令对其进行备份，命令为：cp vimrc vimrc.bak（必须要有管理员权限，否则无法成功） 用管理员权限打开vimrc，命令为：sudo vi vimrc 打开后，在vimrc文件最后加入一行命令：set nu; 加完后，写入，退出，（esc -&gt; :wq），重新使用vim打开任意文件即可发现有行号的标示。 navicat for MySQL无法连接Linux服务器中的MySQL 1130错误 输入mysql -p进入MySQL，输入密码 mysql&gt; grant all privileges on . to root@”%” identified by “root”;结果如下：Query OK, 0 rows affected, 1 warning (0.00 sec) 退出数据库mysql&gt; exit 将&#x2F;etc&#x2F;mysql&#x2F;my.cnf文件中bind-address&#x3D;127.0.0.1 这句话注释掉 sudo &#x2F;etc&#x2F;init.d&#x2F;mysql restart 重启MySQL服务成功！此时navicat客户端已可连接服务器MySQL","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[]},{"title":"Nginx代理端口","slug":"Nginx代理端口","date":"2024-01-25T06:57:07.000Z","updated":"2024-03-15T09:58:22.000Z","comments":true,"path":"2024/01/25/Nginx代理端口/","link":"","permalink":"https://maydaychen.github.io/2024/01/25/Nginx%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3/","excerpt":"","text":"Nginx 安装参照这个链接就好了http://nginx.org/en/linux_packages.html#RHEL使用nginx -V， 看到如下界面，就OK了 Nginx配置在&#x2F;etc&#x2F;nginx&#x2F;nginx.conf最下面加入如下代码shell stream &#123; upstream ssh&#123; server 127.0.0.1:22; &#125; server &#123; listen 8022; proxy_connect_timeout 1h; proxy_timeout 1h; proxy_pass ssh; &#125; &#125; 重载配置systemctl reload nginx然后就可以用8022端口去连接服务器啦","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://maydaychen.github.io/tags/Nginx/"}]},{"title":"HomeAssistant笔记--更换iOS Themes主题","slug":"HomeAssistant更换iOS-Themes主题","date":"2023-11-24T23:58:37.000Z","updated":"2024-03-15T09:58:22.000Z","comments":true,"path":"2023/11/25/HomeAssistant更换iOS-Themes主题/","link":"","permalink":"https://maydaychen.github.io/2023/11/25/HomeAssistant%E6%9B%B4%E6%8D%A2iOS-Themes%E4%B8%BB%E9%A2%98/","excerpt":"","text":"主题链接：https://github.com/basnijholt/lovelace-ios-themes 配置过程 主题需要在HACS中安装，搜索iOS应该就能看到 配置中加入: 123456文件名： /config/configuration.yaml# Load frontend themes from the themes folderfrontend: themes: !include_dir_merge_named themes 把主题放置在themes下themes文件夹在docker中HA的根目录下 建www目录存放图片资源 注意：www文件夹与themes文件夹同一层级 在www目录中建立跟themes目录中一样的文件夹名称，例如这里叫做ios-themes 在www的插件文件夹中，修改ios-themes.yaml 1234567891011主要是这边的修改：把www改为local，路径更改background-image: &quot;center / cover no-repeat fixed url(&#x27;/hacsfiles/themes/homekit-bg-dark-green.jpg&#x27;)&quot;改成background-image: &quot;center / cover no-repeat fixed url(&#x27;/local/ios-themes/homekit-bg-dark-green.jpg&#x27;)&quot; local文件夹其实就是值得www文件夹（注意不是把www文件夹改名成local文件夹） 如果不改的话，系统会找不到这个图片，导致首页不会修改背景图 重启HA","categories":[],"tags":[{"name":"HA","slug":"HA","permalink":"https://maydaychen.github.io/tags/HA/"}]},{"title":"Ansible笔记--delegate_to指令","slug":"Ansible笔记-delegate-to指令","date":"2023-11-22T02:22:08.000Z","updated":"2023-11-22T08:13:47.000Z","comments":true,"path":"2023/11/22/Ansible笔记-delegate-to指令/","link":"","permalink":"https://maydaychen.github.io/2023/11/22/Ansible%E7%AC%94%E8%AE%B0-delegate-to%E6%8C%87%E4%BB%A4/","excerpt":"","text":"场景介绍目前执行Ansible的过程中，遇到这么一个需求，在远程服务器上执行一系列操作，但是这个操作需要用到一组数据，该数据存在于Ansible服务器中的一个文件中，但是远程服务器无法读取到该文件，所以查到了这个指令，Ansible 的任务委派功能（delegate_to）。 使用 delegate_to 关键字可以委派任务到指定的机器上运行。 在 playbook 的操作如下： 12345678## 读取指定的localhost上的文件并定义为变量- name: read read_csv: path: &quot;&#123;&#123; csv_tmp_path &#125;&#125;&quot; delimiter: &#x27;,&#x27; register: file_list changed_when: false delegate_to: localhost 任务委派功能还可以用于以下场景： 在部署之前将一个主机从一个负载均衡集群中删除； 当你要对一个主机做改变之前去掉相应 dns 的记录； 当在一个存储设备上创建 iscsi 卷的时候； 当使用外的主机来检测网络出口是否正常的时候。 委托（delegate）通过”delegate_to”, 用户可以把某一个任务放在委托的机器上执行. 1234567hosts: webserversserial: 5tasks: - name: take out of load balancer pool command: /usr/bin/take_out_of_pool &#123;&#123; inventory_hostname &#125;&#125; delegate_to: 127.0.0.1 无论定义了hosts是什么，上面的这个task都只会在localhost(即ansible运行的机器)上执行, 如果只是想在本地执行，“delegate_to: 127.0.0.1” 也可以用local_action来代替 1234tasks: - name: take out of load balancer pool local_action: command /usr/bin/take_out_of_pool &#123;&#123; inventory_hostname &#125;&#125; 委托者的facts默认情况下, 委托任务的facts是inventory_hostname中主机的facts, 而不是被委托机器的facts. 在ansible 2.0 中, 设置delegate_facts为true可以让任务去收集被委托机器的facts. 1234567- hosts: app_servers tasks: - name: gather facts from db servers setup: delegate_to: &quot;&#123;&#123;item&#125;&#125;&quot; delegate_facts: True with_items: &quot;&#123;&#123;groups[&#x27;dbservers&#x27;&#125;&#125;&quot; 该例子会收集dbservers的facts并分配给这些机器, 而不会去收集app_servers的facts run_once通过run_once: true来指定该task只能在某一台机器上执行一次. 可以和delegate_to 结合使用 123- command: /opt/application/upgrade_db.py run_once: true delegate_to: web01.example.org 指定在”web01.example.org”上执行这个task 如果没有delegate_to, 那么这个task只会在当前主机组的第一台机器上执行","categories":[],"tags":[{"name":"Ansible","slug":"Ansible","permalink":"https://maydaychen.github.io/tags/Ansible/"}]},{"title":"Ansible笔记--获取当前日期时间","slug":"Ansible笔记-获取当前日期时间","date":"2023-11-21T05:34:45.000Z","updated":"2023-11-21T05:35:38.000Z","comments":true,"path":"2023/11/21/Ansible笔记-获取当前日期时间/","link":"","permalink":"https://maydaychen.github.io/2023/11/21/Ansible%E7%AC%94%E8%AE%B0-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/","excerpt":"","text":"获取当前日期123- name: Display current date and time ansible.builtin.debug: msg: &quot;Current date and time is &#123;&#123; ansible_date_time.date &#125;&#125;&quot; 获取到的日期格式是YYYY-MM-DD, 如果想改成其他格式，可以使用正则获取年月日 123- name: Format current date ansible.builtin.debug: msg: &quot;Formatted date: &#123;&#123; ansible_date_time.date | regex_replace(&#x27;^(\\\\d&#123;4&#125;)-(\\\\d&#123;2&#125;)-(\\\\d&#123;2&#125;)$&#x27;, &#x27;\\\\3/\\\\2/\\\\1&#x27;) &#125;&#125;&quot; \\1 - 年 \\2 - 月 \\3 - 日 获取当前时间123- name: Display current date and time ansible.builtin.debug: msg: &quot;Current date and time is &#123;&#123; ansible_date_time.time &#125;&#125;&quot; 问题‘ansible_date_time’ is undefined 解决方案： ansible_date_time是事实的一部分，所以需要设置 1gather_facts: true","categories":[],"tags":[{"name":"Ansible","slug":"Ansible","permalink":"https://maydaychen.github.io/tags/Ansible/"}]},{"title":"小翼管家获取电信光猫超密教程","slug":"小翼管家获取电信光猫超密教程","date":"2023-11-20T14:03:14.000Z","updated":"2024-03-15T10:00:37.000Z","comments":true,"path":"2023/11/20/小翼管家获取电信光猫超密教程/","link":"","permalink":"https://maydaychen.github.io/2023/11/20/%E5%B0%8F%E7%BF%BC%E7%AE%A1%E5%AE%B6%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E8%B6%85%E5%AF%86%E6%95%99%E7%A8%8B/","excerpt":"","text":"转自https://www.bilibili.com/read/cv22351257/自用，侵删 方法一：苹果手机（最简单） 苹果手机在App Store下载抓包软件stream，及小翼管家（绑定光猫）。连接光猫WiFi stream软件打开HTTMS抓包，安装CA证书并信任 点击开始抓包，打开小翼管家，点击网关设置，然后随便点击（比如指示灯，不点也可以）。 回到stream，停止抓包。点击抓包历史。全部请求找到任意一个含有token&#x3D;的POST网址并点击进去（不行就多试几个POST网址），点击右上角向上的箭头，弹出更多操作，点击编辑重放请求。 点击最下面的请求体最下面一行，点击原始数据，删除清空并粘贴以下代码并点击存储：（注意格式） { “Params”: [], “MethodName”: “GetTAPasswd”, “RPCMethod”: “CallMethod”, “ObjectPath”: “&#x2F;com&#x2F;ctc&#x2F;igd1&#x2F;Telecom&#x2F;System”, “InterfaceName”: “com.ctc.igd1.SysCmd”, “ServiceName”: “com.ctc.igd1” } 最后点击右上角开始按钮，点击响应最下面的BODY即可看到（如果结果返回错误，原因是以上的代码格式不正确或者是POST网址没找对） 注：密码格式：telecomadmin12345678，账号默认是telecomadmin。","categories":[{"name":"NAS","slug":"NAS","permalink":"https://maydaychen.github.io/categories/NAS/"}],"tags":[]},{"title":"Linux系统盘扩容","slug":"Linux系统盘扩容","date":"2023-11-13T11:13:57.000Z","updated":"2024-03-15T10:00:04.000Z","comments":true,"path":"2023/11/13/Linux系统盘扩容/","link":"","permalink":"https://maydaychen.github.io/2023/11/13/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E6%89%A9%E5%AE%B9/","excerpt":"","text":"先在云控制台新增容量 运行下面的命令以查看根目录目前的容量 1234567891011[root@ip-172-17-6-219 ~]$ df -hTFilesystem Type Size Used Avail Use% Mounted ondevtmpfs devtmpfs 461M 0 461M 0% /devtmpfs tmpfs 479M 0 479M 0% /dev/shmtmpfs tmpfs 479M 780K 478M 1% /runtmpfs tmpfs 479M 0 479M 0% /sys/fs/cgroup/dev/nvme0n1p1 xfs 8.0G 5.6G 2.5G 70% /tmpfs tmpfs 96M 0 96M 0% /run/user/1015tmpfs tmpfs 96M 0 96M 0% /run/user/1014tmpfs tmpfs 96M 0 96M 0% /run/user/0tmpfs tmpfs 96M 0 96M 0% /run/user/1028 运行下面的命令来查看实际容量 12345[root@ip-172-17-6-219 ~]$ lsblkNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTnvme0n1 259:0 0 15G 0 disk|-nvme0n1p1 259:1 0 8G 0 part /`-nvme0n1p128 259:2 0 1M 0 part 运行下面的命令来增加容量（最后的1为目标盘在这个nvme0n1）中的序号 12[root@ip-172-17-6-219 ~]$ sudo growpart /dev/nvme0n1 1CHANGED: partition=1 start=4096 old: size=16773087 end=16777183 new: size=31453151 end=31457247 为了验证容量是否已经被添加, 我们可以再次使用lsblk命令 12345[root@ip-172-17-6-219 ~]$ lsblkNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTnvme0n1 259:0 0 15G 0 disk|-nvme0n1p1 259:1 0 15G 0 part /`-nvme0n1p128 259:2 0 1M 0 part 根据文件系统不同运行不同的命令 如果是xfs文件系统: sudo xfs_growfs -d &#x2F; 1234567891011[root@ip-172-17-6-219 ~]$ sudo xfs_growfs -d /meta-data=/dev/nvme0n1p1 isize=512 agcount=4, agsize=524159 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=1 spinodes=0data = bsize=4096 blocks=2096635, imaxpct=25 = sunit=0 swidth=0 blksnaming =version 2 bsize=4096 ascii-ci=0 ftype=1log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1realtime =none extsz=4096 blocks=0, rtextents=0data blocks changed from 2096635 to 3931643 如果是ext4文件系统: 1sudo resize2fs /dev/nvme5n1p2","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[]},{"title":"Nginx配置反向代理时出现的13: Permission denied) while connecting to upstream, client: 127.0.0.1","slug":"Nginx配置反向代理时出现的13-Permission-denied-while-connecting-to-upstream-client-127-0-0-1","date":"2023-11-01T07:09:12.000Z","updated":"2024-03-15T10:00:04.000Z","comments":true,"path":"2023/11/01/Nginx配置反向代理时出现的13-Permission-denied-while-connecting-to-upstream-client-127-0-0-1/","link":"","permalink":"https://maydaychen.github.io/2023/11/01/Nginx%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%8413-Permission-denied-while-connecting-to-upstream-client-127-0-0-1/","excerpt":"","text":"条件不允许的情况下（不能随意重启计算机）执行下列代码： 1setsebool -P httpd_can_network_connect 1 其他情况下, 可以获取root权限，通过root修改&#x2F;etc&#x2F;selinux&#x2F;config 123456789sudo suvim /etc/selinux/configSELINUX=enforcing改为SELINUX=disabled重启服务器","categories":[{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://maydaychen.github.io/tags/Nginx/"}]},{"title":"通过hexo更新github pages博客","slug":"通过hexo更新github-pages博客","date":"2023-10-12T07:23:01.000Z","updated":"2024-03-15T17:01:49.421Z","comments":true,"path":"2023/10/12/通过hexo更新github-pages博客/","link":"","permalink":"https://maydaychen.github.io/2023/10/12/%E9%80%9A%E8%BF%87hexo%E6%9B%B4%E6%96%B0github-pages%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"#文件生成及编辑 1hexo new &quot;文章标题&quot; 通过该命令行，可以在 “博客所在路径\\source_posts\\”下生成一个md文件，文件名称为上面命令行所输入的文章标题 由于生成的是markdown格式的文件，所以建议使用一个markdown编写完成后，复制粘贴到该md文件中。 #文件发布编辑完成后，在命令行输入 1hexo g 文章就会发布到本地，然后通过 1hexo s 将文件变化发布到本地环境，此时可以通过访问localhost:4000，查看自己博客相关变化 #同步到GitHub 1hexo d 成功同步到GitHub（前提是跟GitHub已经配对）！","categories":[{"name":"博客相关","slug":"博客相关","permalink":"https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://maydaychen.github.io/tags/Hexo/"}]},{"title":"hexo g报错 Cannot read properties of undefined (reading 'count')","slug":"Hexo-g报错-Cannot-read-properties-of-undefined-reading-count_chenyideMacBook-Pro.local_Mar-17-155326-2024_CaseConflict","date":"2023-08-27T14:07:18.000Z","updated":"2024-03-15T17:01:49.419Z","comments":true,"path":"2023/08/27/Hexo-g报错-Cannot-read-properties-of-undefined-reading-count_chenyideMacBook-Pro.local_Mar-17-155326-2024_CaseConflict/","link":"","permalink":"https://maydaychen.github.io/2023/08/27/Hexo-g%E6%8A%A5%E9%94%99-Cannot-read-properties-of-undefined-reading-count_chenyideMacBook-Pro.local_Mar-17-155326-2024_CaseConflict/","excerpt":"","text":"问题在编译博客的时候，发现了一个问题 12345678910111213141516171819hexo gINFO Validating configINFO Start processingFATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlTypeError: Cannot read properties of undefined (reading &#x27;count&#x27;) at module.exports (/Users/xxx/Documents/blog/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41) at Hexo.tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23) at Hexo.&lt;anonymous&gt; (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/method.js:15:34) at /Users/xxx/Documents/blog/node_modules/hexo/lib/hexo/index.js:407:22 at tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23) at MappingPromiseArray._promiseFulfilled (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:68:38) at PromiseArray._iterate (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:115:31) at MappingPromiseArray.init (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:79:10) at MappingPromiseArray._asyncInit (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:37:10) at _drainQueueStep (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:97:12) at _drainQueue (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:86:9) at Async._drainQueues (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:102:5) at Async.drainQueues [as _onImmediate] (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:15:14) at process.processImmediate (node:internal/timers:476:21) 排查问题1hexo g --debug 通过debug模式查看问题所在，发现问题所在 12345614:02:48.751 DEBUG Generator: post14:02:48.753 DEBUG Generator: archive14:02:48.753 DEBUG Generator: index14:02:48.754 DEBUG Generator: atom14:02:48.762 DEBUG Generator: baidu_url_generator14:02:48.763 FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html Issue Linkhttps://github.com/hexojs/hexo/issues/2402 该插件的相关文档https://hui-wang.info/2016/10/23/Hexo插件之百度主动提交链接/","categories":[{"name":"博客相关","slug":"博客相关","permalink":"https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://maydaychen.github.io/tags/Hexo/"}]},{"title":"hexo g报错 Cannot read properties of undefined (reading 'count')","slug":"hexo-g报错-Cannot-read-properties-of-undefined-reading-count","date":"2023-08-27T14:07:18.000Z","updated":"2023-08-27T14:12:50.000Z","comments":true,"path":"2023/08/27/hexo-g报错-Cannot-read-properties-of-undefined-reading-count/","link":"","permalink":"https://maydaychen.github.io/2023/08/27/hexo-g%E6%8A%A5%E9%94%99-Cannot-read-properties-of-undefined-reading-count/","excerpt":"","text":"问题在编译博客的时候，发现了一个问题 12345678910111213141516171819hexo gINFO Validating configINFO Start processingFATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlTypeError: Cannot read properties of undefined (reading &#x27;count&#x27;) at module.exports (/Users/xxx/Documents/blog/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41) at Hexo.tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23) at Hexo.&lt;anonymous&gt; (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/method.js:15:34) at /Users/xxx/Documents/blog/node_modules/hexo/lib/hexo/index.js:407:22 at tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23) at MappingPromiseArray._promiseFulfilled (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:68:38) at PromiseArray._iterate (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:115:31) at MappingPromiseArray.init (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:79:10) at MappingPromiseArray._asyncInit (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:37:10) at _drainQueueStep (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:97:12) at _drainQueue (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:86:9) at Async._drainQueues (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:102:5) at Async.drainQueues [as _onImmediate] (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:15:14) at process.processImmediate (node:internal/timers:476:21) 排查问题1hexo g --debug 通过debug模式查看问题所在，发现问题所在 12345614:02:48.751 DEBUG Generator: post14:02:48.753 DEBUG Generator: archive14:02:48.753 DEBUG Generator: index14:02:48.754 DEBUG Generator: atom14:02:48.762 DEBUG Generator: baidu_url_generator14:02:48.763 FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html Issue Linkhttps://github.com/hexojs/hexo/issues/2402 该插件的相关文档https://hui-wang.info/2016/10/23/Hexo插件之百度主动提交链接/","categories":[{"name":"博客相关","slug":"博客相关","permalink":"https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://maydaychen.github.io/tags/Hexo/"},{"name":"插件","slug":"插件","permalink":"https://maydaychen.github.io/tags/%E6%8F%92%E4%BB%B6/"}]},{"title":"Docker入门(1)--Docker概述","slug":"Docker入门-1-Docker概述","date":"2023-08-27T09:49:33.000Z","updated":"2023-08-27T10:19:52.923Z","comments":true,"path":"2023/08/27/Docker入门-1-Docker概述/","link":"","permalink":"https://maydaychen.github.io/2023/08/27/Docker%E5%85%A5%E9%97%A8-1-Docker%E6%A6%82%E8%BF%B0/","excerpt":"","text":"Docker与虚拟机的对比虚拟机技术缺点： 资源占用十分多 冗余步骤多（比如开机等） 启动很慢 Docker和传统虚拟机的不同： 传统虚拟机需要虚拟出一个硬件，运行一整个操作系统，然后在系统上安装和运行软件 容器内的应用直接运行在宿主机，容器没有自己的内核的， 也没有虚拟硬件，所以很轻便 每个容器之间互相隔离，每个容器内都有一个属于自己的文件系统，互不影响 Docker组成镜像Image：就好比一个模版，可以通过模版来创建容器服务 通过镜像可以创建多个容器（最终服务&#x2F;项目运行就在容器中） 容器Container：Docker利用容器技术，独立运行一个或一组应用，通过镜像来创建 基本命令：启动，停止，删除 目前可以把容器理解为一个简易的Linux系统 仓库Registry: 远程仓库存放镜像的地方，就好比代码放git 仓库分为公有仓库和私有仓库 如Docker Hub(默认都是国内的，需要配置镜像加速) 云服务商都有容器服务器 Docker是怎么工作的Docker是一个Client-Server架构的系统，Docker的守护进程运行在主机上，通过Socket从客户端访问 DockerServer接收到DockerClient的指令，就会执行这个指令 Docker为什么比VM快Docker有着比VM更少的抽象层 Docker利用的是宿主机的内核，但VM需要加载一个分钟级别的Guest OS 所以说，新建一个容器的时候，docker不需要像VM一样重新加载一个OS的内核，省略了加载Guest OS的过程，所以会很快","categories":[{"name":"Docker相关","slug":"Docker相关","permalink":"https://maydaychen.github.io/categories/Docker%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://maydaychen.github.io/tags/Docker/"}]},{"title":"windows右键实现当前路径打开cmd","slug":"windows右键实现当前路径打开cmd","date":"2022-03-17T03:49:21.000Z","updated":"2024-03-15T16:29:50.328Z","comments":true,"path":"2022/03/17/windows右键实现当前路径打开cmd/","link":"","permalink":"https://maydaychen.github.io/2022/03/17/windows%E5%8F%B3%E9%94%AE%E5%AE%9E%E7%8E%B0%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84%E6%89%93%E5%BC%80cmd/","excerpt":"","text":"转自https://blog.csdn.net/wx_assa/article/details/106880806 ##无管理员权限的cmd新建一个txt文件，并重命名为xxx.reg，并将下放代码复制到文本中 123Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\QOpencmd\\command]&quot;&quot;=&quot;cmd.exe /s /k pushd \\&quot;%V\\&quot;&quot; 运行该注册表文件，在右键菜单中会多出一项 QQOpencmd，即为打开cmd的选项 ##有管理员权限的cmd新建文件同上，代码复制下面的代码 12345Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]&quot;ShowBasedOnVelocityId&quot;=dword:00639bc8[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]@=&quot;cmd.exe /s /k pushd \\&quot;%V\\&quot;&quot; 运行，在右键菜单中会多出一项 以管理员运行(A)，即为以管理员打开cmd的选项","categories":[{"name":"Windows","slug":"Windows","permalink":"https://maydaychen.github.io/categories/Windows/"}],"tags":[]},{"title":"常用Windows软件总结","slug":"常用Windows软件总结","date":"2022-03-15T16:28:34.000Z","updated":"2024-03-15T16:29:10.126Z","comments":true,"path":"2022/03/16/常用Windows软件总结/","link":"","permalink":"https://maydaychen.github.io/2022/03/16/%E5%B8%B8%E7%94%A8Windows%E8%BD%AF%E4%BB%B6%E6%80%BB%E7%BB%93/","excerpt":"","text":"为了每次重装电脑的时候不会遗漏相关软件，特写下此文章，提醒自己保持较高生产力 #服务器相关 Xshell远程连接服务器，执行相关操作https://www.netsarang.com/products/xsh_overview.html FileZilla服务器远程文件传输https://filezilla-project.org/ #影音 Listen1支持网易云音乐&#x2F;QQ音乐&#x2F;虾米音乐三合一https://github.com/listen1/listen1_chrome_extension 网易云音乐以前很喜欢，可是现在- -版权实在太少，能听的不多，而且推荐算法工程师可能换人了……https://music.163.com/ win10商店中的爱奇艺没！有！广！告！ #工具 微软 To- Do每日备忘记录提醒https://todo.microsoft.com/zh-cn geek很舒服的卸载工具https://geekuninstaller.com/ TeamViewer远程控制软件，work from home 必备https://www.teamviewer.com/zhCN/ notepad++替代记事本良心直选https://notepad-plus-plus.org/ QuickLook实现mac上的预览功能https://github.com/QL-Win/QuickLook/releases wox感觉写的好的一篇文章 https://github.com/Wox-launcher/Wox/releases Q-Dir同时显示四个资源管理器https://q-dir.en.softonic.com/ 持续更新ing……","categories":[{"name":"Windows","slug":"Windows","permalink":"https://maydaychen.github.io/categories/Windows/"}],"tags":[]},{"title":"开发经验谈","slug":"开发经验谈","date":"2022-02-11T07:50:16.000Z","updated":"2024-03-17T07:51:06.884Z","comments":true,"path":"2022/02/11/开发经验谈/","link":"","permalink":"https://maydaychen.github.io/2022/02/11/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C%E8%B0%88/","excerpt":"","text":"开发层面： 不要过度封装，功能可以封装，但是页面等持谨慎态度，甲方随时可能改动部分页面 对于一个资源文件在多处调用的场景，不能直接覆盖修改，容易在其他地方产生错误 代码规范很重要 改bug前，先想一想改动的代码对其他功能有没有影响，切忌看到啥问题就直接改，容易出事 改完bug需要自己测试一下，不然容易导致问题反复 code review，功能完成后有时间查看一遍实现代码，会用Android Lint等检查工具 项目管理： 要有风险意识，报工期要给自己预留足够的突发事件处理时间 多人开发时，每个人的开发能力有差异，需要有一个主导，尽量保持代码一致性，保证今后的可维护性，不能事不关己高高挂起 一个项目不一定只有一种框架，要根据需求随机应变 需要对功能有细致了解才能进行开发 多切分支，避免一步错，步步错的情况 每天汇总进度，判断项目进展真实情况 其余 都是一家人，不能不爽就喷，控制情绪 不能掌控需求，就只能接受需求","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://maydaychen.github.io/categories/%E6%9D%82%E8%B0%88/"}],"tags":[]}],"categories":[{"name":"NAS","slug":"NAS","permalink":"https://maydaychen.github.io/categories/NAS/"},{"name":"运维","slug":"运维","permalink":"https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"},{"name":"Android","slug":"Android","permalink":"https://maydaychen.github.io/categories/Android/"},{"name":"博客相关","slug":"博客相关","permalink":"https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"},{"name":"Linux","slug":"Linux","permalink":"https://maydaychen.github.io/categories/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://maydaychen.github.io/categories/Mac/"},{"name":"Tools","slug":"Tools","permalink":"https://maydaychen.github.io/categories/Tools/"},{"name":"Docker相关","slug":"Docker相关","permalink":"https://maydaychen.github.io/categories/Docker%E7%9B%B8%E5%85%B3/"},{"name":"Windows","slug":"Windows","permalink":"https://maydaychen.github.io/categories/Windows/"},{"name":"杂谈","slug":"杂谈","permalink":"https://maydaychen.github.io/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"SHR","slug":"SHR","permalink":"https://maydaychen.github.io/tags/SHR/"},{"name":"群晖","slug":"群晖","permalink":"https://maydaychen.github.io/tags/%E7%BE%A4%E6%99%96/"},{"name":"Teams","slug":"Teams","permalink":"https://maydaychen.github.io/tags/Teams/"},{"name":"事件传递","slug":"事件传递","permalink":"https://maydaychen.github.io/tags/%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92/"},{"name":"Hexo","slug":"Hexo","permalink":"https://maydaychen.github.io/tags/Hexo/"},{"name":"Zabbix","slug":"Zabbix","permalink":"https://maydaychen.github.io/tags/Zabbix/"},{"name":"Grafana","slug":"Grafana","permalink":"https://maydaychen.github.io/tags/Grafana/"},{"name":"Alfred","slug":"Alfred","permalink":"https://maydaychen.github.io/tags/Alfred/"},{"name":"Git","slug":"Git","permalink":"https://maydaychen.github.io/tags/Git/"},{"name":"Nginx","slug":"Nginx","permalink":"https://maydaychen.github.io/tags/Nginx/"},{"name":"HA","slug":"HA","permalink":"https://maydaychen.github.io/tags/HA/"},{"name":"Ansible","slug":"Ansible","permalink":"https://maydaychen.github.io/tags/Ansible/"},{"name":"插件","slug":"插件","permalink":"https://maydaychen.github.io/tags/%E6%8F%92%E4%BB%B6/"},{"name":"Docker","slug":"Docker","permalink":"https://maydaychen.github.io/tags/Docker/"}]}