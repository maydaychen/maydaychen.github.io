<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexotest</title>
  
  <subtitle>hei</subtitle>
  <link href="https://maydaychen.github.io/atom.xml" rel="self"/>
  
  <link href="https://maydaychen.github.io/"/>
  <updated>2025-02-11T06:35:50.308Z</updated>
  <id>https://maydaychen.github.io/</id>
  
  <author>
    <name>Maydaychen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Prometheus-如何发送报警到Teams</title>
    <link href="https://maydaychen.github.io/2025/02/15/Prometheus-%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E6%8A%A5%E8%AD%A6%E5%88%B0Teams/"/>
    <id>https://maydaychen.github.io/2025/02/15/Prometheus-%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E6%8A%A5%E8%AD%A6%E5%88%B0Teams/</id>
    <published>2025-02-15T06:20:49.000Z</published>
    <updated>2025-02-11T06:35:50.308Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MS-Teams中创建webhook"><a href="#MS-Teams中创建webhook" class="headerlink" title="MS Teams中创建webhook"></a>MS Teams中创建webhook</h1><p>参考地址：<br><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook?tabs=newteams,dotnet">https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook?tabs=newteams%2Cdotnet</a></p><h1 id="配置AlertManager"><a href="#配置AlertManager" class="headerlink" title="配置AlertManager"></a>配置AlertManager</h1><p>分为两个版本，旧版本和新版本</p><h2 id="老版本"><a href="#老版本" class="headerlink" title="老版本"></a>老版本</h2><p>老版本请参考这个工具<br><a href="https://github.com/prometheus-msteams/prometheus-msteams">https://github.com/prometheus-msteams/prometheus-msteams</a></p><h2 id="新版本"><a href="#新版本" class="headerlink" title="新版本"></a>新版本</h2><p>在新版本中，我们就可以直接使用teams配置来<br><a href="https://prometheus.io/docs/alerting/latest/configuration/#msteams_config">https://prometheus.io/docs/alerting/latest/configuration/#msteams_config</a></p><h3 id="配置receiver"><a href="#配置receiver" class="headerlink" title="配置receiver"></a>配置receiver</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">      - name: &#x27;teams&#x27;</span><br><span class="line">        msteams_configs:</span><br><span class="line">          - webhook_url: &#x27;&#123;&#123; webhook_url &#125;&#125;&#x27;</span><br><span class="line">            title: &#x27;&#123;&#123; template &quot;teams_alert_title&quot; . &#125;&#125;&#x27;</span><br><span class="line">            text: &#x27;&#123;&#123; template &quot;teams_alert_message&quot; . &#125;&#125;&#x27;</span><br><span class="line">templateFiles:</span><br><span class="line">teams_alert_title.tmpl: |-</span><br><span class="line">&#123;&#123; define &quot;teams_alert_title&quot; &#125;&#125;[&#123;&#123; .Status | toUpper &#125;&#125;] &#123;&#123; .CommonLabels.alertname &#125;&#125;&#123;&#123;- end &#125;&#125;</span><br><span class="line">teams_alert_message.tmpl: |-</span><br><span class="line">&#123;&#123; define &quot;teams_alert_message&quot; &#125;&#125;</span><br><span class="line">&#123;&#123; range .Alerts &#125;&#125;</span><br><span class="line">*Environment:* megatron-dev-eks-cluster</span><br><span class="line">*Namespace:* &#123;&#123; .Labels.namespace &#125;&#125;</span><br><span class="line">*Pod:* &#123;&#123; .Labels.pod &#125;&#125;</span><br><span class="line">*Summary:* &#123;&#123; .Annotations.summary &#125;&#125;</span><br><span class="line">*Description:* &#123;&#123; .Annotations.description &#125;&#125;</span><br><span class="line">*Runbook_Url:* &#123;&#123; .Annotations.runbook_url &#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br></pre></td></tr></table></figure><p>webhook_url 为在Teams中创建的webhook<br>我们可以直接使用这个template，也可以加一些其他的内容</p><h3 id="配置route"><a href="#配置route" class="headerlink" title="配置route"></a>配置route</h3><pre><code>  routes:  - receiver: &#39;xxx&#39;    continue: true  - receiver: &#39;teams&#39;</code></pre><h3 id="测试是否可行"><a href="#测试是否可行" class="headerlink" title="测试是否可行"></a>测试是否可行</h3><p>经过上面的配置，在Teams中我们确实可以收到对应的alert，因此配置成功</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MS-Teams中创建webhook&quot;&gt;&lt;a href=&quot;#MS-Teams中创建webhook&quot; class=&quot;headerlink&quot; title=&quot;MS Teams中创建webhook&quot;&gt;&lt;/a&gt;MS Teams中创建webhook&lt;/h1&gt;&lt;p&gt;参考地址：&lt;</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Prometheus" scheme="https://maydaychen.github.io/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix-监控JAVA heap memory相关</title>
    <link href="https://maydaychen.github.io/2025/02/14/Zabbix-%E7%9B%91%E6%8E%A7JAVA-heap-memory%E7%9B%B8%E5%85%B3/"/>
    <id>https://maydaychen.github.io/2025/02/14/Zabbix-%E7%9B%91%E6%8E%A7JAVA-heap-memory%E7%9B%B8%E5%85%B3/</id>
    <published>2025-02-14T03:29:36.000Z</published>
    <updated>2025-02-11T06:19:57.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="创建scripts"><a href="#创建scripts" class="headerlink" title="创建scripts"></a>创建scripts</h2><p>在scripts（&#x2F;etc&#x2F;zabbix&#x2F;scripts）目录下创建一个新的shell脚本 get_heap_memory.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">pid=`ps -aux | grep java | grep wildfly | grep -v &quot;grep&quot; | grep -v $0 | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">S0U=`jstat -gc $pid | awk &#x27;&#123;if(NR!=1) print int($3+0.5)&#125;&#x27;`</span><br><span class="line">S1U=`jstat -gc $pid | awk &#x27;&#123;if(NR!=1) print int($4+0.5)&#125;&#x27;`</span><br><span class="line">EU=`jstat -gc $pid | awk &#x27;&#123;if(NR!=1) print int($6+0.5)&#125;&#x27;`</span><br><span class="line">OU=`jstat -gc $pid | awk &#x27;&#123;if(NR!=1) print int($8+0.5)&#125;&#x27;`</span><br><span class="line">heap_memory_used=$((S0U+S1U+EU+OU))</span><br><span class="line">heap_memory_max=`jinfo -flag MaxHeapSize $pid | awk -F &quot;=&quot; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">echo $heap_memory_used &gt; /var/log/zabbix/heap_memory_used.txt</span><br><span class="line">echo $heap_memory_max &gt; /var/log/zabbix/heap_memory_max.txt</span><br></pre></td></tr></table></figure><h2 id="配置定时任务"><a href="#配置定时任务" class="headerlink" title="配置定时任务"></a>配置定时任务</h2><p>由于zabbix agent没有权限去运行这个命令，因此我们采用定时任务的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * sudo bash /etc/zabbix/get_heap_memory.sh</span><br></pre></td></tr></table></figure><p>注：其实可以通过赋予agent运行这个脚本的权限来省略这一步</p><h2 id="获得任务执行结果"><a href="#获得任务执行结果" class="headerlink" title="获得任务执行结果"></a>获得任务执行结果</h2><p>在脚本运行后，会生成下面两个文件，我们监控这两个文件即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/var/log/zabbix/heap_memory_used.txt</span><br><span class="line">/var/log/zabbix/heap_memory_max.txt</span><br></pre></td></tr></table></figure><h2 id="在console中配置"><a href="#在console中配置" class="headerlink" title="在console中配置"></a>在console中配置</h2><p>分别创建两个item，用来监控最大值和已使用值</p><img src="/2025/02/14/Zabbix-%E7%9B%91%E6%8E%A7JAVA-heap-memory%E7%9B%B8%E5%85%B3/1.png" class="" title="图片"><img src="/2025/02/14/Zabbix-%E7%9B%91%E6%8E%A7JAVA-heap-memory%E7%9B%B8%E5%85%B3/2.png" class="" title="图片">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;h1 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h1&gt;&lt;h2 id</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix-监控SSL证书有效期</title>
    <link href="https://maydaychen.github.io/2025/02/13/Zabbix-%E7%9B%91%E6%8E%A7SSL%E8%AF%81%E4%B9%A6%E6%9C%89%E6%95%88%E6%9C%9F/"/>
    <id>https://maydaychen.github.io/2025/02/13/Zabbix-%E7%9B%91%E6%8E%A7SSL%E8%AF%81%E4%B9%A6%E6%9C%89%E6%95%88%E6%9C%9F/</id>
    <published>2025-02-13T03:28:15.000Z</published>
    <updated>2025-02-11T06:19:57.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>项目需要，需要监控所有的SSL证书的有效期，因此需要自定义一个监控项</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="创建自定义脚本"><a href="#创建自定义脚本" class="headerlink" title="创建自定义脚本"></a>创建自定义脚本</h2><p>在Zabbix的scripts目录(&#x2F;etc&#x2F;zabbix&#x2F;scripts&#x2F;)下创建一个新的shell脚本check_ssl.sh，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">time=$(echo | openssl s_client  -connect  $1:443 2&gt;/dev/null | openssl x509 -noout -dates |awk -F&#x27;=&#x27; &#x27;NR==2&#123;print $2&#125;&#x27;)</span><br><span class="line">times=$((($(date +%s -d &quot;$time&quot;)-$(date +%s))/(60*60*24)))</span><br><span class="line">echo $times</span><br></pre></td></tr></table></figure><h2 id="修改agent配置文件"><a href="#修改agent配置文件" class="headerlink" title="修改agent配置文件"></a>修改agent配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=check_ssl[*],/etc/zabbix/scripts/check_ssl.sh $1</span><br></pre></td></tr></table></figure><h2 id="在Zabbix-console中配置"><a href="#在Zabbix-console中配置" class="headerlink" title="在Zabbix console中配置"></a>在Zabbix console中配置</h2><p>创建如下item<br>name值为SSL certification expire date of <br>key值为check_ssl[domain]<br>都需要填入自己要监控的domain</p><img src="/2025/02/13/Zabbix-%E7%9B%91%E6%8E%A7SSL%E8%AF%81%E4%B9%A6%E6%9C%89%E6%95%88%E6%9C%9F/1.png" class="" title="图片"><h2 id="在latest-data中即可看到具体的有效期"><a href="#在latest-data中即可看到具体的有效期" class="headerlink" title="在latest data中即可看到具体的有效期"></a>在latest data中即可看到具体的有效期</h2><img src="/2025/02/13/Zabbix-%E7%9B%91%E6%8E%A7SSL%E8%AF%81%E4%B9%A6%E6%9C%89%E6%95%88%E6%9C%9F/2.png" class="" title="图片">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;项目需要，需要监控所有的SSL证书的有效期，因此需要自定义一个监控项&lt;/p&gt;
&lt;h1 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-如何迁移Grafana到一台新服务器</title>
    <link href="https://maydaychen.github.io/2025/02/12/Grafana-%E5%A6%82%E4%BD%95%E8%BF%81%E7%A7%BBGrafana%E5%88%B0%E4%B8%80%E5%8F%B0%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://maydaychen.github.io/2025/02/12/Grafana-%E5%A6%82%E4%BD%95%E8%BF%81%E7%A7%BBGrafana%E5%88%B0%E4%B8%80%E5%8F%B0%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2025-02-12T02:44:22.000Z</published>
    <updated>2025-02-11T06:19:57.507Z</updated>
    
    <content type="html"><![CDATA[<p>有时候由于服务器更新之类的，我们需要迁移一整套Grafana，这时候该怎么操作呢？<br>下面让我一步步说明下</p><h1 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h1><p>在新的服务器上安装Grafana<br>这个不再赘述，可以看一下我之前的文章</p><h1 id="备份及迁移"><a href="#备份及迁移" class="headerlink" title="备份及迁移"></a>备份及迁移</h1><h2 id="迁移配置文件"><a href="#迁移配置文件" class="headerlink" title="迁移配置文件"></a>迁移配置文件</h2><p>配置文件即grafana.ini，一般存放于&#x2F;etc&#x2F;grafana&#x2F;grafana.ini<br>一般有两种迁移法，</p><ul><li>直接覆盖配置文件，但是如果版本号差异过大，会有很多的新的配置项，直接覆盖会有风险</li><li>对比配置文件，逐个修改，如果配置项不多的话，建议使用此方式</li></ul><h2 id="迁移数据库文件"><a href="#迁移数据库文件" class="headerlink" title="迁移数据库文件"></a>迁移数据库文件</h2><p>数据库和插件都在 &#x2F;var&#x2F;lib&#x2F;grafana 文件夹, 所以我们迁移这整个文件夹就行</p><img src="/2025/02/12/Grafana-%E5%A6%82%E4%BD%95%E8%BF%81%E7%A7%BBGrafana%E5%88%B0%E4%B8%80%E5%8F%B0%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class="" title="图片"><p>其中最重要的就是DB文件和plugin文件，当然，如果不想同步plugin，直接跳过就行</p><h1 id="启动及查漏补缺"><a href="#启动及查漏补缺" class="headerlink" title="启动及查漏补缺"></a>启动及查漏补缺</h1><h2 id="启动Grafana"><a href="#启动Grafana" class="headerlink" title="启动Grafana"></a>启动Grafana</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start grafana-server</span><br></pre></td></tr></table></figure><h2 id="插件检查"><a href="#插件检查" class="headerlink" title="插件检查"></a>插件检查</h2><p>如果插件不全或者太老，建议删除插件重新安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grafana-cli plugins install [plugin-name]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有时候由于服务器更新之类的，我们需要迁移一整套Grafana，这时候该怎么操作呢？&lt;br&gt;下面让我一步步说明下&lt;/p&gt;
&lt;h1 id=&quot;安装Grafana&quot;&gt;&lt;a href=&quot;#安装Grafana&quot; class=&quot;headerlink&quot; title=&quot;安装Grafana&quot;&gt;</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-接入OpenSearch</title>
    <link href="https://maydaychen.github.io/2025/02/11/Grafana-%E6%8E%A5%E5%85%A5OpenSearch/"/>
    <id>https://maydaychen.github.io/2025/02/11/Grafana-%E6%8E%A5%E5%85%A5OpenSearch/</id>
    <published>2025-02-11T10:11:06.000Z</published>
    <updated>2025-02-11T10:19:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加OpenSearch数据源"><a href="#添加OpenSearch数据源" class="headerlink" title="添加OpenSearch数据源"></a>添加OpenSearch数据源</h1><img src="/2025/02/11/Grafana-%E6%8E%A5%E5%85%A5OpenSearch/1.png" class="" title="图片"><h1 id="配置连接信息"><a href="#配置连接信息" class="headerlink" title="配置连接信息"></a>配置连接信息</h1><img src="/2025/02/11/Grafana-%E6%8E%A5%E5%85%A5OpenSearch/2.png" class="" title="图片"><ul><li>Name: 任意填写即可</li><li>URL: 在AWS OpenSearch中找到，endpoint信息</li><li>Access： 默认Server即可<br>其他可不填</li></ul><h1 id="配置认证信息"><a href="#配置认证信息" class="headerlink" title="配置认证信息"></a>配置认证信息</h1><h2 id="Basic模式"><a href="#Basic模式" class="headerlink" title="Basic模式"></a>Basic模式</h2><p>适合可以直接用账号密码登录OpenSearch的情况下使用</p><img src="/2025/02/11/Grafana-%E6%8E%A5%E5%85%A5OpenSearch/4.png" class="" title="图片"><p>直接在下面的Basic Auth Details里面填入用户名密码即可</p><h2 id="sigv4模式"><a href="#sigv4模式" class="headerlink" title="sigv4模式"></a>sigv4模式</h2><p>适合只接入了第三方，并且可能设置了MFA导致无法直接登录的情况下</p><img src="/2025/02/11/Grafana-%E6%8E%A5%E5%85%A5OpenSearch/3.png" class="" title="图片"><p>这边的Authentication Provider有三个选项，分别为</p><ul><li>AWS SDK Default</li><li>Access &amp; Secrct Key<br>  该模式适用于</li><li>Credentials file</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;添加OpenSearch数据源&quot;&gt;&lt;a href=&quot;#添加OpenSearch数据源&quot; class=&quot;headerlink&quot; title=&quot;添加OpenSearch数据源&quot;&gt;&lt;/a&gt;添加OpenSearch数据源&lt;/h1&gt;&lt;img src=&quot;/2025/02/11</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Linux-用户增删改查相关操作</title>
    <link href="https://maydaychen.github.io/2025/02/11/Linux-%E7%94%A8%E6%88%B7%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>https://maydaychen.github.io/2025/02/11/Linux-%E7%94%A8%E6%88%B7%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</id>
    <published>2025-02-11T09:47:01.000Z</published>
    <updated>2025-02-11T09:53:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建（管理员）用户"><a href="#创建（管理员）用户" class="headerlink" title="创建（管理员）用户"></a>创建（管理员）用户</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">USERNAME=[username]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1代表有sudo权限，0代表普通用户</span></span><br><span class="line">SUDO_FLAG=1</span><br><span class="line"></span><br><span class="line">PUBKEY=&quot;ssh-rsa xxx&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if id &quot;$&#123;USERNAME&#125;&quot; &amp;&gt;/dev/null; then</span><br><span class="line">    echo &#x27;adduser: user &#x27;$&#123;USERNAME&#125;&#x27; already exists&#x27;</span><br><span class="line">    exit 0</span><br><span class="line">else</span><br><span class="line">    adduser $&#123;USERNAME&#125;</span><br><span class="line">    mkdir /home/$&#123;USERNAME&#125;/.ssh</span><br><span class="line">    chmod 700 /home/$&#123;USERNAME&#125;/.ssha</span><br><span class="line">    touch /home/$&#123;USERNAME&#125;/.ssh/authorized_keys</span><br><span class="line">    chmod 600 /home/$&#123;USERNAME&#125;/.ssh/authorized_keys</span><br><span class="line">    echo $&#123;PUBKEY&#125; &gt;&gt; /home/$&#123;USERNAME&#125;/.ssh/authorized_keys</span><br><span class="line">    chown $&#123;USERNAME&#125;:$&#123;USERNAME&#125; /home/$&#123;USERNAME&#125;/.ssh/*</span><br><span class="line">    chown $&#123;USERNAME&#125;:$&#123;USERNAME&#125; /home/$&#123;USERNAME&#125;/.ssh</span><br><span class="line"></span><br><span class="line">    #depends whether sudo right is needed for the user</span><br><span class="line">    if [ $SUDO_FLAG -eq 1 ]; then</span><br><span class="line">        touch /etc/sudoers.d/$&#123;USERNAME&#125;</span><br><span class="line">        echo $&#123;USERNAME&#125;&#x27; ALL=(ALL) NOPASSWD:ALL&#x27; &gt;&gt; /etc/sudoers.d/$&#123;USERNAME&#125;</span><br><span class="line">        echo yi.chen&#x27; ALL=(ALL) NOPASSWD:ALL&#x27; &gt;&gt; /etc/sudoers.d/yi.chen</span><br><span class="line">        chmod 640 /etc/sudoers.d/$&#123;USERNAME&#125;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">chage -I -1 -m 0 -M 99999 -E -1 $&#123;USERNAME&#125;</span><br><span class="line"></span><br><span class="line">if [ $? -eq 0 ]; then</span><br><span class="line">    echo &#x27;Success! Created user &#x27;$&#123;USERNAME&#125;&#x27; &#x27;</span><br><span class="line">else</span><br><span class="line">    echo &#x27;Failed! user:&#x27;$&#123;USERNAME&#125;&#x27;&#x27;</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="删除（管理员）用户"><a href="#删除（管理员）用户" class="headerlink" title="删除（管理员）用户"></a>删除（管理员）用户</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询普通用户并删除</span></span><br><span class="line">cat /etc/passwd | grep username</span><br><span class="line">sudo userdel -r username</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看用户有没有设定定时任务，有的话记得删除</span></span><br><span class="line">sudo crontab -u username -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除与用户相关的sudoers文件</span></span><br><span class="line">sudo rm /etc/sudoers.d/username</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建（管理员）用户&quot;&gt;&lt;a href=&quot;#创建（管理员）用户&quot; class=&quot;headerlink&quot; title=&quot;创建（管理员）用户&quot;&gt;&lt;/a&gt;创建（管理员）用户&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix-运行一段时间后IO过高的问题解决</title>
    <link href="https://maydaychen.github.io/2025/02/11/Zabbix-%E8%BF%90%E8%A1%8C%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%90%8EIO%E8%BF%87%E9%AB%98%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>https://maydaychen.github.io/2025/02/11/Zabbix-%E8%BF%90%E8%A1%8C%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%90%8EIO%E8%BF%87%E9%AB%98%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</id>
    <published>2025-02-11T09:35:33.000Z</published>
    <updated>2025-02-11T09:36:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>zabbix server 服务器运行一段时间后有两个进程会出现cpu负载和io瓶颈，主要是:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zabbix busy housekeeper processes </span><br><span class="line">zabbix busy history syncer processes</span><br></pre></td></tr></table></figure><p>出现这两个问题主要是表数据太大 history_uint，trends_uint，history主要是这三个表，</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show variables like &quot;%_buffer%&quot;;</span><br><span class="line">innodb_buffer_pool_size=8M 默认mysql只有8M而已，</span><br></pre></td></tr></table></figure><p>可将此值调值物理内存的70%，比如innodb_buffer_pool_size&#x3D;4G，mysql的这个配置一般是在&#x2F;etc&#x2F;my.cnf，<br>如果次配置文件里没有此属性，直接添加，保存，重启mysql即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;zabbix server 服务器运行一段时间后有两个进程会出现cpu负载和io瓶颈，主要是:&lt;/p&gt;
&lt;figure cl</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix-监控Windows下某个文件夹的所有文件变化</title>
    <link href="https://maydaychen.github.io/2025/02/11/Zabbix-%E7%9B%91%E6%8E%A7Windows%E4%B8%8B%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96/"/>
    <id>https://maydaychen.github.io/2025/02/11/Zabbix-%E7%9B%91%E6%8E%A7Windows%E4%B8%8B%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96/</id>
    <published>2025-02-11T09:32:19.000Z</published>
    <updated>2025-02-11T09:37:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取所有的指定路径下的文件列表"><a href="#获取所有的指定路径下的文件列表" class="headerlink" title="获取所有的指定路径下的文件列表"></a>获取所有的指定路径下的文件列表</h1><p>在scripts目录下创建check_file_in_D_Apps.ps1文件，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$Path = &quot;D:\Apps&quot;</span><br><span class="line"></span><br><span class="line">$files = Get-ChildItem -Path $Path -File -Recurse | Where-Object &#123;</span><br><span class="line">    -not ($_.FullName -like &quot;*\backup\*&quot;)</span><br><span class="line">&#125; | ForEach-Object &#123;</span><br><span class="line">    @&#123;</span><br><span class="line">        &quot;&#123;#FULLPATH&#125;&quot; = $_.FullName</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$files | ConvertTo-Json -Depth 1</span><br></pre></td></tr></table></figure><h1 id="修改zabbix-agent-conf-file"><a href="#修改zabbix-agent-conf-file" class="headerlink" title="修改zabbix agent conf file"></a>修改zabbix agent conf file</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=file_check_D_Apps,powershell -NoProfile -ExecutionPolicy Bypass -File &quot;C:\Program Files\zabbix\scripts\check_file_in_D_Apps.ps1&quot;</span><br></pre></td></tr></table></figure><h1 id="重启zabbix-agent"><a href="#重启zabbix-agent" class="headerlink" title="重启zabbix agent"></a>重启zabbix agent</h1><p>由于这里是windows服务器，所以直接去任务管理器中service那边重启即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;获取所有的指定路径下的文件列表&quot;&gt;&lt;a href=&quot;#获取所有的指定路径下的文件列表&quot; class=&quot;headerlink&quot; title=&quot;获取所有的指定路径下的文件列表&quot;&gt;&lt;/a&gt;获取所有的指定路径下的文件列表&lt;/h1&gt;&lt;p&gt;在scripts目录下创建check</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Windows" scheme="https://maydaychen.github.io/tags/Windows/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Opensearch-ctx内容不全的问题</title>
    <link href="https://maydaychen.github.io/2025/02/11/Opensearch-ctx%E5%86%85%E5%AE%B9%E4%B8%8D%E5%85%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://maydaychen.github.io/2025/02/11/Opensearch-ctx%E5%86%85%E5%AE%B9%E4%B8%8D%E5%85%A8%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2025-02-11T09:25:51.000Z</published>
    <updated>2025-02-11T09:30:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在OpenSearch中，我希望在action中把一整条log作为报警内容发送出来，但是根据文档，配置为ctx.results.0.hits.hits.0._source.log，但是发现根本找不到这个值</p><p>经过查询，我发现在返回的ctx中仅存在如下的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">results=[, hits=, max_score=null&#125;, took=13, timed_out=false&#125;], periodStart=2024-07-08T08:30:07.425Z, periodEnd=2024-07-08T08:31:07.425Z, error=null, trigger=&#123;id=GkWmgZABvp-0qNhTa6Rs, name=Test alarm, please ignore, severity=3, actions=[&#123;name=Test alarm, please ignore&#125;]&#125;, alert=&#123;acknowledged_time=null, id=sHdKkZABDnp5EchiGRFG, version=-1, end_time=null, error_message=null, execution_id=HEWmgZABvp-0qNhTa6R5_2024-07-08T07:41:09.151397924_6ca4e795-58a9-489d-85fe-74c4bbf2d9ab, workflow_id=, workflow_name=, associated_alert_ids=[], last_notification_time=1720426150054, severity=3, start_time=1720424470852, state=ACTIVE, bucket_keys=null, parent_bucket_path=null, finding_ids=, related_doc_ids=&#125;&#125;</span><br></pre></td></tr></table></figure><p>没有我需要的<br>查询语句为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 0,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;bool&quot;: &#123;</span><br><span class="line">            &quot;filter&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;range&quot;: &#123;</span><br><span class="line">                        &quot;@timestamp&quot;: &#123;</span><br><span class="line">                            &quot;from&quot;: &quot;&#123;&#123;period_end&#125;&#125;||-1d&quot;,</span><br><span class="line">                            &quot;to&quot;: &quot;&#123;&#123;period_end&#125;&#125;&quot;,</span><br><span class="line">                            &quot;include_lower&quot;: true,</span><br><span class="line">                            &quot;include_upper&quot;: true,</span><br><span class="line">                            &quot;format&quot;: &quot;epoch_millis&quot;,</span><br><span class="line">                            &quot;boost&quot;: 1</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;query_string&quot;: &#123;</span><br><span class="line">                        &quot;query&quot;: &quot;*BATCHMONITORING*&quot;,</span><br><span class="line">                        &quot;default_field&quot;: &quot;log&quot;,</span><br><span class="line">                        &quot;fields&quot;: [],</span><br><span class="line">                        &quot;type&quot;: &quot;best_fields&quot;,</span><br><span class="line">                        &quot;default_operator&quot;: &quot;or&quot;,</span><br><span class="line">                        &quot;max_determinized_states&quot;: 10000,</span><br><span class="line">                        &quot;enable_position_increments&quot;: true,</span><br><span class="line">                        &quot;fuzziness&quot;: &quot;AUTO&quot;,</span><br><span class="line">                        &quot;fuzzy_prefix_length&quot;: 0,</span><br><span class="line">                        &quot;fuzzy_max_expansions&quot;: 50,</span><br><span class="line">                        &quot;phrase_slop&quot;: 0,</span><br><span class="line">                        &quot;escape&quot;: false,</span><br><span class="line">                        &quot;auto_generate_synonyms_phrase_query&quot;: true,</span><br><span class="line">                        &quot;fuzzy_transpositions&quot;: true,</span><br><span class="line">                        &quot;boost&quot;: 1</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;adjust_pure_negative&quot;: true,</span><br><span class="line">            &quot;boost&quot;: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>经过查询，我发现问题存在于size这个参数</p><p>size: 这指定了返回的文档数量。在这里设为 0 表示只返回匹配的聚合结果，而不返回实际的文档内容。</p><p>我这边把size:0从查询语句中删除后，返回的结果终于包含了我需要的参数</p><h1 id="其他参数解释"><a href="#其他参数解释" class="headerlink" title="其他参数解释"></a>其他参数解释</h1><ul><li><strong>query</strong>: 这是查询的主体，使用布尔查询（bool query），允许将多个过滤条件组合在一起。</li><li><strong>bool</strong>: 布尔查询允许组合多个查询子句，如 <code>filter</code>、<code>must</code>、<code>must_not</code> 等。</li><li><strong>filter</strong>: 这是一个过滤器子句，它包含了两个过滤条件。</li><li><strong>range</strong>: 范围查询，用于限制 <code>@timestamp</code> 字段的范围。具体来说：<ul><li><code>&quot;from&quot;: &quot;&#123;&#123;period_end&#125;&#125;||-1d&quot;</code>：表示从 <code>period_end</code> 变量指定的时间开始，向前推一天。<code>&#123;&#123;period_end&#125;&#125;</code> 是一个模板变量，在实际执行时会被具体的时间值替换。</li><li><code>&quot;to&quot;: &quot;&#123;&#123;period_end&#125;&#125;&quot;</code>：表示到 <code>period_end</code> 变量指定的时间结束。</li><li><code>&quot;format&quot;: &quot;epoch_millis&quot;</code>：指定时间格式为毫秒级时间戳。</li><li><code>&quot;include_lower&quot;: true, &quot;include_upper&quot;: true</code>：包括上下界值。</li></ul></li><li><strong>query_string</strong>: 查询字符串查询，用于搜索包含指定关键字的文档。<ul><li><code>&quot;query&quot;: &quot;*BATCHMONITORING*&quot;</code>：这里的查询字符串是通配符形式，表示搜索包含 “BATCHMONITORING” 关键字的文档。</li><li><code>&quot;default_field&quot;: &quot;log&quot;</code>：指定默认搜索字段为 “log”。</li><li><code>&quot;default_operator&quot;: &quot;or&quot;</code>：默认操作符为 OR 操作符，表示任何一个关键字匹配即可。</li><li>其他参数如 <code>fuzziness</code>、<code>phrase_slop</code> 等是调整查询行为的参数，如自动模糊匹配、短语搜索等。</li></ul></li><li><strong>adjust_pure_negative</strong>: 设置为 <code>true</code>，表示查询结果中不包含全负匹配的文档。</li><li><strong>boost</strong>: 设置为 <code>1</code>，表示默认的查询权重。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;在OpenSearch中，我希望在action中把一整条log作为报警内容发送出来，但是根据文档，配置为ctx.results.0.hits</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="ELK" scheme="https://maydaychen.github.io/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-开启Sigv4认证</title>
    <link href="https://maydaychen.github.io/2025/02/11/Grafana-%E5%BC%80%E5%90%AFSigv4%E8%AE%A4%E8%AF%81/"/>
    <id>https://maydaychen.github.io/2025/02/11/Grafana-%E5%BC%80%E5%90%AFSigv4%E8%AE%A4%E8%AF%81/</id>
    <published>2025-02-11T09:15:08.000Z</published>
    <updated>2025-02-11T09:20:53.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在Grafana中，有些data source是需要开启sigv4认证的，例如OpenSearch，这个配置项默认是关闭的，这里我们介绍一下怎么开启</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="传统方式"><a href="#传统方式" class="headerlink" title="传统方式"></a>传统方式</h2><p>如果我们想在Grafana中开启sigv4认证，我们需要在grafana.ini中修改一个参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;sigv4_auth_enabled = false</span><br></pre></td></tr></table></figure><p>这个配置默认是关闭的，所以我们需要修改成true并重启grafana</p><h2 id="K8S方式"><a href="#K8S方式" class="headerlink" title="K8S方式"></a>K8S方式</h2><p>如果我们使用了helmfile，在kube-prometheus-stack中，并没有全部的grafana配置，那么我们该怎么操作呢？<br>这时候我们需要找到prometheus-operator-values.yaml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grafana:</span><br><span class="line"># grafana.ini 字段用于修改 grafana 配置文件内容，使用 yaml 格式定义，会自动转成 ini。</span><br><span class="line">  grafana.ini:</span><br><span class="line">    auth:</span><br><span class="line">      sigv4_auth_enabled: false</span><br></pre></td></tr></table></figure><p>然后通过命令生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helmfile apply</span><br></pre></td></tr></table></figure><img src="/2025/02/11/Grafana-%E5%BC%80%E5%90%AFSigv4%E8%AE%A4%E8%AF%81/1.png" class="" title="图片">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在Grafana中，有些data source是需要开启sigv4认证的，例如OpenSearch，这个配置项默认是关闭的，这里我们介绍一下</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>AI-使用ChatBox工具实现AI界面化操作</title>
    <link href="https://maydaychen.github.io/2025/02/11/AI-%E4%BD%BF%E7%94%A8ChatBox%E5%B7%A5%E5%85%B7%E5%AE%9E%E7%8E%B0AI%E7%95%8C%E9%9D%A2%E5%8C%96%E6%93%8D%E4%BD%9C/"/>
    <id>https://maydaychen.github.io/2025/02/11/AI-%E4%BD%BF%E7%94%A8ChatBox%E5%B7%A5%E5%85%B7%E5%AE%9E%E7%8E%B0AI%E7%95%8C%E9%9D%A2%E5%8C%96%E6%93%8D%E4%BD%9C/</id>
    <published>2025-02-11T02:38:05.000Z</published>
    <updated>2025-02-11T02:38:24.304Z</updated>
    
    
    
    
    <category term="AI" scheme="https://maydaychen.github.io/categories/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>Grafana-配置SMTP以发送忘记密码重置邮件</title>
    <link href="https://maydaychen.github.io/2025/02/10/Grafana-%E9%85%8D%E7%BD%AESMTP%E4%BB%A5%E5%8F%91%E9%80%81%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E9%82%AE%E4%BB%B6/"/>
    <id>https://maydaychen.github.io/2025/02/10/Grafana-%E9%85%8D%E7%BD%AESMTP%E4%BB%A5%E5%8F%91%E9%80%81%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E9%82%AE%E4%BB%B6/</id>
    <published>2025-02-10T01:52:50.000Z</published>
    <updated>2025-02-11T06:19:57.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在项目中，我们每个人都会用到各种各样的工具，随着工具的增多，拥有的账号的数量也随之递增，这时候如果没有使用密码管理工具，很容易就忘记了某一个工具的账号密码<br>而我们现在就要讨论一下在Grafana中，如果忘记了密码，怎么在不联系管理员的情况下手动重置密码</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>在Grafana登录时，我们可以看到在登陆框的下面有一个Forget your password?<br>点击该按钮，会让你输入用户名或邮箱，然后Grafana就会自动发送邮件到这个邮箱，帮你重置密码<br>但是如果没有配置SMTP服务的话，这个功能是不起作用的，所以本文就是用来讲如何配置SMTP</p><img src="/2025/02/10/Grafana-%E9%85%8D%E7%BD%AESMTP%E4%BB%A5%E5%8F%91%E9%80%81%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E9%82%AE%E4%BB%B6/1.png" class="" title="图片"><p>打开Grafana配置文件（&#x2F;etc&#x2F;grafana&#x2F;grafana.ini），找到如下这一段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#################################### SMTP / Emailing ##########################</span><br><span class="line">[smtp]</span><br><span class="line">;enabled = false</span><br><span class="line">enabled = true</span><br><span class="line">;host = localhost:25</span><br><span class="line">host = &#123;&#123;smtp-server:465&#125;&#125;</span><br><span class="line">;user =</span><br><span class="line">user = &#123;&#123;username&#125;&#125;</span><br><span class="line"># If the password contains # or ; you have to wrap it with triple quotes. Ex &quot;&quot;&quot;#password;&quot;&quot;&quot;</span><br><span class="line">;password =</span><br><span class="line">password = &#123;&#123;password&#125;&#125;</span><br><span class="line">;cert_file =</span><br><span class="line">;key_file =</span><br><span class="line">;skip_verify = false</span><br><span class="line">;from_address = admin@grafana.localhost</span><br><span class="line">from_address = &#123;&#123;aaa@example.com&#125;&#125;</span><br><span class="line">;from_name = Grafana</span><br><span class="line"># EHLO identity in SMTP dialog (defaults to instance_name)</span><br><span class="line">;ehlo_identity = dashboard.example.com</span><br><span class="line">ehlo_identity = &#123;&#123;ehlo&#125;&#125;</span><br><span class="line"># SMTP startTLS policy (defaults to &#x27;OpportunisticStartTLS&#x27;)</span><br><span class="line">;startTLS_policy = NoStartTLS</span><br><span class="line"># Enable trace propagation in e-mail headers, using the &#x27;traceparent&#x27;, &#x27;tracestate&#x27; and (optionally) &#x27;baggage&#x27; fields (defaults to false)</span><br><span class="line">;enable_tracing = false</span><br></pre></td></tr></table></figure><p>按照如上配置,修改括号中的内容</p><p>再之后重启grafana</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart grafana-server</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>经测试可以正常发送，配置正确</p><img src="/2025/02/10/Grafana-%E9%85%8D%E7%BD%AESMTP%E4%BB%A5%E5%8F%91%E9%80%81%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E9%82%AE%E4%BB%B6/2.png" class="" title="Grafana-login"><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><h2 id="startTLS-policy"><a href="#startTLS-policy" class="headerlink" title="startTLS_policy"></a>startTLS_policy</h2><p>关于startTLS_policy，有三个选项，下面介绍一下每一个选项<br>startTLS_policy 用于定义 Grafana 在与 SMTP 服务器通信时如何处理 STARTTLS。它有以下几个可能的取值：</p><ul><li><p>OpportunisticStartTLS（默认值）：<br>  Grafana 会尝试使用 STARTTLS 升级为加密通信。<br>  如果服务器不支持 STARTTLS，Grafana 会回退到明文通信。<br>  这是一种灵活的策略，适用于大多数场景。</p></li><li><p>MandatoryStartTLS：<br>Grafana 必须使用 STARTTLS 加密通信。<br>如果服务器不支持 STARTTLS，Grafana 会拒绝连接并报错。<br>这种策略适合对安全性要求较高的场景。</p></li><li><p>NoStartTLS：<br>Grafana 不会尝试使用 STARTTLS。<br>所有通信都以明文方式进行。<br>这种策略仅适用于测试或内部网络环境，不推荐在生产环境中使用。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在项目中，我们每个人都会用到各种各样的工具，随着工具的增多，拥有的账号的数量也随之递增，这时候如果没有使用密码管理工具，很容易就忘记了某一个</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-重置密码方法</title>
    <link href="https://maydaychen.github.io/2025/02/09/Grafana-%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95/"/>
    <id>https://maydaychen.github.io/2025/02/09/Grafana-%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95/</id>
    <published>2025-02-09T15:39:36.000Z</published>
    <updated>2025-02-11T06:19:57.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>有时候当账号太多的时候，根本记不住所有的账号密码，这时候就很容易登录失败，这时候怎么办呢？<br>接下来就让我来给大家演示一下Grafana的账号如果忘记了的话，该怎么找回自己的账号密码</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>让我们来看一下具体的实操环节，有两种实现方式，如下</p><h2 id="方法一-grafana-cli"><a href="#方法一-grafana-cli" class="headerlink" title="方法一 grafana-cli"></a>方法一 grafana-cli</h2><p>直接使用grafana-cli</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grafana-cli admin reset-admin-password admin</span><br><span class="line"></span><br><span class="line">## 重启服务</span><br><span class="line">sudo systemctl restart grafana-server</span><br></pre></td></tr></table></figure><p>之后就可以用admin,admin登录了</p><h2 id="方法二-数据库"><a href="#方法二-数据库" class="headerlink" title="方法二 数据库"></a>方法二 数据库</h2><p>直接修改数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## 直接使用命令找到Grafana的数据库文件</span><br><span class="line">find / -name &quot;grafana.db&quot;</span><br><span class="line"></span><br><span class="line">## 打开数据库</span><br><span class="line">sqlite3 /var/lib/grafana/grafana.db</span><br><span class="line"></span><br><span class="line">## 查看数据库中包含的表</span><br><span class="line">.tables</span><br><span class="line">## 查看user表内容</span><br><span class="line">select * from user;</span><br><span class="line">## 重置admin用户的密码为默认admin</span><br><span class="line">update user set password = &#x27;59acf18b94d7eb0694c61e60ce44c110c7a683ac6a8f09580d626f90f4a242000746579358d77dd9e570e83fa24faa88a8a6&#x27;, salt = &#x27;F3FAxVm33R&#x27; where login = &#x27;admin&#x27;;</span><br><span class="line">## 退出sqlite3</span><br><span class="line">.exit</span><br></pre></td></tr></table></figure><p>之后就可以用admin,admin登录了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>上面就是两种方法的具体操作啦，个人认为肯定是第一种比较简单一点啦，你们觉得嘞？<br>另外，如果服务是放在公网上的话，建议把admin这个账号disable一下或者至少是修改一下密码，防止被别人入侵哦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;有时候当账号太多的时候，根本记不住所有的账号密码，这时候就很容易登录失败，这时候怎么办呢？&lt;br&gt;接下来就让我来给大家演示一下Grafana</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-使用Button修改MySQL数据库</title>
    <link href="https://maydaychen.github.io/2025/02/08/Grafana-%E4%BD%BF%E7%94%A8Button%E4%BF%AE%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://maydaychen.github.io/2025/02/08/Grafana-%E4%BD%BF%E7%94%A8Button%E4%BF%AE%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2025-02-08T09:25:36.000Z</published>
    <updated>2025-02-11T06:19:57.390Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>众所周知，Grafana是一个用来展示数据的平台，但是有时候还是会有需求说能不能有一个按钮，点击的时候再对数据库进行修改，从而达到更新数据的效果<br>经过多方查证，终于实现了一个简单的，点击button执行sql语句的功能，特此分享</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="安装Button插件"><a href="#安装Button插件" class="headerlink" title="安装Button插件"></a>安装Button插件</h2><p>可以在Grafana Plugins里直接找到，安装即可</p><img src="/2025/02/08/Grafana-%E4%BD%BF%E7%94%A8Button%E4%BF%AE%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" class="" title="图片"><h2 id="配置Button功能"><a href="#配置Button功能" class="headerlink" title="配置Button功能"></a>配置Button功能</h2><img src="/2025/02/08/Grafana-%E4%BD%BF%E7%94%A8Button%E4%BF%AE%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/2.png" class="" title="图片"><h3 id="Orientation"><a href="#Orientation" class="headerlink" title="Orientation"></a>Orientation</h3><p>按钮的方向，只有一个按钮的时候没有效果，当设置两个或两个以上时，可以设置按钮是水平放置还是垂直放置</p><h3 id="Button-Configuration"><a href="#Button-Configuration" class="headerlink" title="Button Configuration"></a>Button Configuration</h3><p>这边就是重头戏了，可以分别对每一个按钮进行设置<br>可以看到这边有三个选项，下面来一一解释</p><ul><li>Text： 即按钮上显示的文字</li><li>Datasource： 对哪一个datasource进行操作，选择项</li><li>Query： 按下这个button后要执行的语句</li></ul><p>可以看到，功能其实是非常简单的，只不过一开始用的时候，对于这个Query可能会有点懵逼</p><p>那么，到底该怎么配置这些个参数呢？插件作者并没有写，但是我尝试之后终于摸索出来了</p><img src="/2025/02/08/Grafana-%E4%BD%BF%E7%94%A8Button%E4%BF%AE%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/3.png" class="" title="图片"><p>我们建立一个新的table控件，并使用query inspector功能来查看它的查询语句<br>可以看到，在queries中有一条数据，并且这边有rawSql参数和format参数比较陌生，于是把这两个参数放到Query中尝试一下，发现确实可以使用</p><p>并且，在页面的右上角也会有消息推送，表示执行成功，至此，功能已被我们实现</p><img src="/2025/02/08/Grafana-%E4%BD%BF%E7%94%A8Button%E4%BF%AE%E6%94%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/4.png" class="" title="图片"><h2 id="Todo-问题待解决"><a href="#Todo-问题待解决" class="headerlink" title="[Todo]问题待解决"></a>[Todo]问题待解决</h2><ol><li>如何解决功能实现后的刷新问题 </li><li>如何动态地编辑我们的数据，比如输入一个值，并通过点击把这个值插入数据库 -&gt; 目前没有找到一个很好的输入框控件</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;众所周知，Grafana是一个用来展示数据的平台，但是有时候还是会有需求说能不能有一个按钮，点击的时候再对数据库进行修改，从而达到更新数据的</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix-Rocky9安装Zabbix-Grafana</title>
    <link href="https://maydaychen.github.io/2025/02/08/Zabbix-Rocky9%E5%AE%89%E8%A3%85Zabbix-Grafana/"/>
    <id>https://maydaychen.github.io/2025/02/08/Zabbix-Rocky9%E5%AE%89%E8%A3%85Zabbix-Grafana/</id>
    <published>2025-02-08T09:21:55.000Z</published>
    <updated>2025-02-11T06:19:57.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装Zabbix"><a href="#安装Zabbix" class="headerlink" title="安装Zabbix"></a>安装Zabbix</h1><h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><p>这里用MariaDB演示<br><a href="https://mariadb.org/download/?t=repo-config&d=Red+Hat+Enterprise+Linux+9&v=10.11&r_m=neusoft">https://mariadb.org/download/?t=repo-config&amp;d=Red+Hat+Enterprise+Linux+9&amp;v=10.11&amp;r_m=neusoft</a><br>通过这个网址获得连接</p><h3 id="选择对应的repo"><a href="#选择对应的repo" class="headerlink" title="选择对应的repo"></a>选择对应的repo</h3><p>根据系统版本和要安装的版本选择对应的repo</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>新建一个repo文件，例如&#x2F;etc&#x2F;yum.repos.d&#x2F;MariaDB.repo， 然后把网站上提供的内容复制进去，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># MariaDB 10.11 RedHatEnterpriseLinux repository list - created 2024-02-29 09:14 UTC</span><br><span class="line"># https://mariadb.org/download/</span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line"># rpm.mariadb.org is a dynamic mirror if your preferred mirror goes offline. See https://mariadb.org/mirrorbits/ for details.</span><br><span class="line"># baseurl = https://rpm.mariadb.org/10.11/rhel/$releasever/$basearch</span><br><span class="line">baseurl = https://mirrors.aliyun.com/mariadb/yum/10.11/rhel/$releasever/$basearch</span><br><span class="line"># gpgkey = https://rpm.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgkey = https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck = 1</span><br></pre></td></tr></table></figure><p>然后就是安装步骤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install MariaDB-server</span><br><span class="line"></span><br><span class="line">## 可选步骤，现在mariadb的命令不会自动绑定mysql命令了，所以你现在用mysql -uxxx -p之类的会跟你说命令不存在</span><br><span class="line">sudo ln -s /usr/bin/mariadb /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">## 启动并设置自动启动</span><br><span class="line">sudo systemctl start mysql</span><br><span class="line">sudo systemctl enable mysql</span><br></pre></td></tr></table></figure><p>至此，MariaD的安装就结束了</p><h2 id="安装Zabbix-Server"><a href="#安装Zabbix-Server" class="headerlink" title="安装Zabbix Server"></a>安装Zabbix Server</h2><p>跟着<a href="https://www.zabbix.com/download">这个网页</a>的命令走，基本不会出什么问题<br>由于今天我们主要讲Rocky的安装，所以我们这么选</p><img src="/2025/02/08/Zabbix-Rocky9%E5%AE%89%E8%A3%85Zabbix-Grafana/3.png" class="" title="图片示例"><p>接下来的步骤由于官网写的很详细，我就直接抄下来了，各位可以看一下</p><h3 id="Install-Zabbix-repository"><a href="#Install-Zabbix-repository" class="headerlink" title="Install Zabbix repository"></a>Install Zabbix repository</h3><p>Disable Zabbix packages provided by EPEL, if you have it installed. Edit file &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo and add the following statement.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[epel]</span><br><span class="line">...</span><br><span class="line">excludepkgs=zabbix*</span><br></pre></td></tr></table></figure><p>Proceed with installing zabbix repository.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rpm -Uvh https://repo.zabbix.com/zabbix/7.0/rocky/9/x86_64/zabbix-release-latest-7.0.el9.noarch.rpm</span><br><span class="line"># dnf clean all</span><br></pre></td></tr></table></figure><h3 id="Install-Zabbix-server-frontend-agent2"><a href="#Install-Zabbix-server-frontend-agent2" class="headerlink" title="Install Zabbix server, frontend, agent2"></a>Install Zabbix server, frontend, agent2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># dnf install zabbix-server-mysql zabbix-web-mysql zabbix-nginx-conf zabbix-sql-scripts zabbix-selinux-policy zabbix-agent2</span><br></pre></td></tr></table></figure><h3 id="Install-Zabbix-agent-2-plugins"><a href="#Install-Zabbix-agent-2-plugins" class="headerlink" title="Install Zabbix agent 2 plugins"></a>Install Zabbix agent 2 plugins</h3><p>You may want to install Zabbix agent 2 plugins.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># dnf install zabbix-agent2-plugin-mongodb zabbix-agent2-plugin-mssql zabbix-agent2-plugin-postgresql</span><br></pre></td></tr></table></figure><h3 id="Create-initial-database"><a href="#Create-initial-database" class="headerlink" title="Create initial database"></a>Create initial database</h3><p>Make sure you have database server up and running.</p><p>Run the following on your database host.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># mysql -uroot -p</span><br><span class="line">password</span><br><span class="line">mysql&gt; create database zabbix character set utf8mb4 collate utf8mb4_bin;</span><br><span class="line">mysql&gt; create user zabbix@localhost identified by &#x27;password&#x27;;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="line">mysql&gt; set global log_bin_trust_function_creators = 1;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure><p>On Zabbix server host import initial schema and data. You will be prompted to enter your newly created password.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p zabbix</span><br></pre></td></tr></table></figure><p>Disable log_bin_trust_function_creators option after importing database schema.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># mysql -uroot -p</span><br><span class="line">password</span><br><span class="line">mysql&gt; set global log_bin_trust_function_creators = 0;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure><h3 id="Configure-the-database-for-Zabbix-server"><a href="#Configure-the-database-for-Zabbix-server" class="headerlink" title="Configure the database for Zabbix server"></a>Configure the database for Zabbix server</h3><p>Edit file &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBPassword=password</span><br></pre></td></tr></table></figure><h3 id="Start-Zabbix-server-and-agent-processes"><a href="#Start-Zabbix-server-and-agent-processes" class="headerlink" title="Start Zabbix server and agent processes"></a>Start Zabbix server and agent processes</h3><p>Start Zabbix server and agent processes and make it start at system boot.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># systemctl restart zabbix-server zabbix-agent2 nginx php-fpm</span><br><span class="line"># systemctl enable zabbix-server zabbix-agent2 nginx php-fpm</span><br></pre></td></tr></table></figure><h3 id="Open-Zabbix-UI-web-page"><a href="#Open-Zabbix-UI-web-page" class="headerlink" title="Open Zabbix UI web page"></a>Open Zabbix UI web page</h3><p>在Nginx的配置中，zabbix默认使用80端口，但是由于政策限制，其实我们不能使用，所以这边改成8090</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/zabbix.conf</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  ## 把下面这两句的注释去掉，再修改一下端口</span><br><span class="line">        listen          8090;</span><br><span class="line">        server_name     example.com;</span><br><span class="line"></span><br><span class="line">## 重载一下nginx</span><br><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><p>然后就可以通过IP:8090 的形式访问到zabbix console了</p><h1 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>直接进下面<a href="https://grafana.com/grafana/download">这个页面</a>，可以看到这边可以选择版本以及操作系统</p><img src="/2025/02/08/Zabbix-Rocky9%E5%AE%89%E8%A3%85Zabbix-Grafana/1.png" class="" title="图片示例"><p>并且如果是Linux平台的，下面会给出不同平台的命令，直接复制粘贴执行一下就可以了</p><img src="/2025/02/08/Zabbix-Rocky9%E5%AE%89%E8%A3%85Zabbix-Grafana/2.png" class="" title="图片示例"><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>运行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## 运行service</span><br><span class="line">systemctl start grafana-server</span><br><span class="line"></span><br><span class="line">## 自启动</span><br><span class="line">systemctl enable grafana-server</span><br></pre></td></tr></table></figure><p>之后浏览器访问IP:3000，就可以看到Grafana界面啦<br>默认账号密码为admin&#x2F;admin，第一次登录会强制修改密码</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="修改默认端口"><a href="#修改默认端口" class="headerlink" title="修改默认端口"></a>修改默认端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/grafana/grafana.ini</span><br><span class="line"></span><br><span class="line">## 把这个3000修改成别的即可</span><br><span class="line">;http_port = 3000</span><br></pre></td></tr></table></figure><h3 id="配置邮件服务"><a href="#配置邮件服务" class="headerlink" title="配置邮件服务"></a>配置邮件服务</h3><p>用于忘记密码等情况，可以不通知管理员自行修改密码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装Zabbix&quot;&gt;&lt;a href=&quot;#安装Zabbix&quot; class=&quot;headerlink&quot; title=&quot;安装Zabbix&quot;&gt;&lt;/a&gt;安装Zabbix&lt;/h1&gt;&lt;h2 id=&quot;安装MariaDB&quot;&gt;&lt;a href=&quot;#安装MariaDB&quot; class=&quot;he</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>AI-尝试使用Ollama本地部署DeepSeek-R1</title>
    <link href="https://maydaychen.github.io/2025/02/03/AI-%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek-R1/"/>
    <id>https://maydaychen.github.io/2025/02/03/AI-%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek-R1/</id>
    <published>2025-02-03T14:16:11.000Z</published>
    <updated>2025-02-11T02:34:51.896Z</updated>
    
    <content type="html"><![CDATA[<p>其实类似的文章好多人都写过了，不过为了图以后查询方便，还是自己写一个吧</p><h1 id="Ollama下载"><a href="#Ollama下载" class="headerlink" title="Ollama下载"></a>Ollama下载</h1><p>官网地址： <a href="https://ollama.com/">https://ollama.com/</a> ，在上面根据自己操作系统下载对应平台<br>下载成功后直接安装，安装应该也是傻瓜似的，安装完成后，使用下面的命令查看是否安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama -v</span><br></pre></td></tr></table></figure><p>如果返回给你版本号了，那就是安装成功了</p><h1 id="AI模型下载"><a href="#AI模型下载" class="headerlink" title="AI模型下载"></a>AI模型下载</h1><p>访问下面的这个地址：<a href="https://ollama.com/search">https://ollama.com/search</a></p><img src="/2025/02/03/AI-%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek-R1/1.png" class="" title="图片"><p>可以看到有很多个模型可以选择，我们这回选择第一个，DeepSeek-R1，直接点击标题，进入详情页</p><img src="/2025/02/03/AI-%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek-R1/2.png" class="" title="图片"><p>在详情页中，我们可以选择不同的tag，即不同的模型大小，这边建议根据自己的电脑规格量力而为，不要下载太大的模型，会导致卡死<br>选择完对应的模型后，右手边会直接显示对应的命令，直接复制，在命令行中执行就好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:8b</span><br><span class="line">pulling manifest </span><br><span class="line">pulling 6340dc3229b0... 100% ▕████████████████▏ 4.9 GB                         </span><br><span class="line">pulling 369ca498f347... 100% ▕████████████████▏  387 B                         </span><br><span class="line">pulling 6e4c38e1172f... 100% ▕████████████████▏ 1.1 KB                         </span><br><span class="line">pulling f4d24e9138dd... 100% ▕████████████████▏  148 B                         </span><br><span class="line">pulling 0cb05c6e4e02... 100% ▕████████████████▏  487 B                         </span><br><span class="line">verifying sha256 digest </span><br><span class="line">writing manifest </span><br><span class="line">success </span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure><p>直到看到success为止，模型就已经下载完成并且已经跑起来了<br>接下来就可以直接问他问题了，如果觉得有点卡可以换小一点规模的模型</p><h1 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h1><p>下一篇我们讲一下如何使用一些第三方工具进行界面化操作，省的每次都用命令行进行聊天</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其实类似的文章好多人都写过了，不过为了图以后查询方便，还是自己写一个吧&lt;/p&gt;
&lt;h1 id=&quot;Ollama下载&quot;&gt;&lt;a href=&quot;#Ollama下载&quot; class=&quot;headerlink&quot; title=&quot;Ollama下载&quot;&gt;&lt;/a&gt;Ollama下载&lt;/h1&gt;&lt;p&gt;官网地</summary>
      
    
    
    
    <category term="AI" scheme="https://maydaychen.github.io/categories/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>AI-Ollama常用命令记录</title>
    <link href="https://maydaychen.github.io/2025/02/03/AI-Ollama%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
    <id>https://maydaychen.github.io/2025/02/03/AI-Ollama%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</id>
    <published>2025-02-03T14:15:37.000Z</published>
    <updated>2025-02-08T15:51:35.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看所有支持的模型"><a href="#查看所有支持的模型" class="headerlink" title="查看所有支持的模型"></a>查看所有支持的模型</h1><p>在<a href="https://ollama.com/search">这个地方</a>能看到所有支持的模型，并且点击对应的模型名称可以有详细的介绍和下载命令<br>   <img src="/2025/02/03/AI-Ollama%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/1.png" class="" title="图片"></p><h1 id="列出所有模型-list"><a href="#列出所有模型-list" class="headerlink" title="列出所有模型 (list)"></a>列出所有模型 (list)</h1><p>列出本地所有可用的模型,可以在这里查找模型名称。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollama list</span><br><span class="line">ollama ls</span><br></pre></td></tr></table></figure><h1 id="运行模型-run"><a href="#运行模型-run" class="headerlink" title="运行模型 (run)"></a>运行模型 (run)</h1><p>运行一个已安装的模型，执行某些任务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run model_name</span><br></pre></td></tr></table></figure><h1 id="显示模型信息-show"><a href="#显示模型信息-show" class="headerlink" title="显示模型信息 (show)"></a>显示模型信息 (show)</h1><p>查看特定模型的详细信息，例如模型名称、版本等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama show model_name</span><br></pre></td></tr></table></figure><h1 id="删除模型-rm"><a href="#删除模型-rm" class="headerlink" title="删除模型 (rm)"></a>删除模型 (rm)</h1><p>删除一个已安装的模型。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama rm model_name</span><br></pre></td></tr></table></figure><h1 id="查看版本-version"><a href="#查看版本-version" class="headerlink" title="查看版本 (version)"></a>查看版本 (version)</h1><p>显示当前 ollama 工具的版本信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollama -v</span><br><span class="line">ollama --version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;查看所有支持的模型&quot;&gt;&lt;a href=&quot;#查看所有支持的模型&quot; class=&quot;headerlink&quot; title=&quot;查看所有支持的模型&quot;&gt;&lt;/a&gt;查看所有支持的模型&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;https://ollama.com/search&quot;&gt;这个地方&lt;</summary>
      
    
    
    
    <category term="AI" scheme="https://maydaychen.github.io/categories/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>Zabbix-配置AWS-SES以发送邮件</title>
    <link href="https://maydaychen.github.io/2025/01/22/Zabbix-%E9%85%8D%E7%BD%AEAWS-SES%E4%BB%A5%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>https://maydaychen.github.io/2025/01/22/Zabbix-%E9%85%8D%E7%BD%AEAWS-SES%E4%BB%A5%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</id>
    <published>2025-01-22T07:47:16.000Z</published>
    <updated>2025-02-11T06:19:57.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置SES"><a href="#配置SES" class="headerlink" title="配置SES"></a>配置SES</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SMTP endpoint: //可以从AWS直接获取</span><br><span class="line">SMTP port: 465</span><br><span class="line">SMTP user name: //可以从AWS直接获取</span><br><span class="line">SMTP password: //可以从AWS直接获取</span><br><span class="line">SMTP domain: //AWS SES上有domain，前缀xxx@可以任意配置</span><br></pre></td></tr></table></figure><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h2 id="Protocol-“smtps”-not-supported-or-disabled-in-libcurl"><a href="#Protocol-“smtps”-not-supported-or-disabled-in-libcurl" class="headerlink" title="Protocol “smtps” not supported or disabled in libcurl"></a>Protocol “smtps” not supported or disabled in libcurl</h2><p>在Zabbix上配置完SES以后，在Test的时候出现上述错误<br>在check curl版本的时候，发现并不支持smtps</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --version</span><br></pre></td></tr></table></figure><p>所以怀疑要升级curl以及它的类库</p><img src="/2025/01/22/Zabbix-%E9%85%8D%E7%BD%AEAWS-SES%E4%BB%A5%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/1.png" class="" title="图片"><h3 id="重新安装curl"><a href="#重新安装curl" class="headerlink" title="重新安装curl"></a>重新安装curl</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install curl --allowerasing</span><br></pre></td></tr></table></figure><h3 id="重新安装libcurl"><a href="#重新安装libcurl" class="headerlink" title="重新安装libcurl"></a>重新安装libcurl</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install libcurl --allowerasing</span><br></pre></td></tr></table></figure><p>之后再尝试一下，发现已经支持smtp&#x2F;smtps了，确实是版本的问题</p><h3 id="重新测试邮件发送功能"><a href="#重新测试邮件发送功能" class="headerlink" title="重新测试邮件发送功能"></a>重新测试邮件发送功能</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置SES&quot;&gt;&lt;a href=&quot;#配置SES&quot; class=&quot;headerlink&quot; title=&quot;配置SES&quot;&gt;&lt;/a&gt;配置SES&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix-监控Nginx</title>
    <link href="https://maydaychen.github.io/2025/01/09/Zabbix-%E7%9B%91%E6%8E%A7Nginx/"/>
    <id>https://maydaychen.github.io/2025/01/09/Zabbix-%E7%9B%91%E6%8E%A7Nginx/</id>
    <published>2025-01-09T07:01:16.000Z</published>
    <updated>2025-02-11T06:19:57.520Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在项目中使用Nginx之后，有时候我们需要知道Nginx具体的工作情况，这时候就需要使用zabbix进行Nginx的相关监控<br>这边我们有两种方法</p><ol><li>使用普通的http请求的方式获取基本信息</li><li>如果使用了Nginx Plus，就可以通过Nginx Plus的接口获取更多的信息</li></ol><h1 id="普通方式"><a href="#普通方式" class="headerlink" title="普通方式"></a>普通方式</h1><p>参考链接： <a href="https://www.zabbix.com/integrations/nginx#nginx_agent">https://www.zabbix.com/integrations/nginx#nginx_agent</a></p><h2 id="确认nginx是否开启with-http-stub-status-module模块"><a href="#确认nginx是否开启with-http-stub-status-module模块" class="headerlink" title="确认nginx是否开启with-http_stub_status_module模块"></a>确认nginx是否开启with-http_stub_status_module模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V 2&gt;&amp;1 | grep -o with-http_stub_status_module</span><br></pre></td></tr></table></figure><p>如果出现with-http_stub_status_module，说明已经开启了该module，即可进行下一步</p><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><p>在80端口对应的配置项里加入如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location = /basic_status &#123;</span><br><span class="line">        stub_status;</span><br><span class="line">        allow 127.0.0.1;</span><br><span class="line">        allow ::1;</span><br><span class="line">        deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改宏变量（可选）"><a href="#修改宏变量（可选）" class="headerlink" title="修改宏变量（可选）"></a>修改宏变量（可选）</h2><p>默认情况下，不需要修改任何宏变量，因为他就是指向了localhost&#x2F;basic_status<br>不过如果修改了端口或者location的话，需要修改对应的配置</p><h1 id="Nginx-Plus方式"><a href="#Nginx-Plus方式" class="headerlink" title="Nginx Plus方式"></a>Nginx Plus方式</h1><p>这个方式比较厉害，能看到的东西非常多，但是有个巨大的问题，就是这不是免费的！<br>如果没有用这个的话，建议可以直接放弃<br>参考链接： <a href="https://www.zabbix.com/integrations/nginx#nginx_plus_http">https://www.zabbix.com/integrations/nginx#nginx_plus_http</a></p><h2 id="配置-重启nginx"><a href="#配置-重启nginx" class="headerlink" title="配置&#x2F;重启nginx"></a>配置&#x2F;重启nginx</h2><p>添加如下配置</p><img src="/2025/01/09/Zabbix-%E7%9B%91%E6%8E%A7Nginx/plus_0.png" class="" title="图片"><p>保存并重启nginx<br>restart&#x2F;reload nginx之后，我们可以尝试访问如下页面，可以看到是有数据传输的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://&lt;IP&gt;:8080/dashboard.html#upstreams</span><br></pre></td></tr></table></figure><img src="/2025/01/09/Zabbix-%E7%9B%91%E6%8E%A7Nginx/plus_1.png" class="" title="图片"><h2 id="绑定template"><a href="#绑定template" class="headerlink" title="绑定template"></a>绑定template</h2><p>这一步非常简单，就把这个template绑定到对应的host上去即可</p><h2 id="修改宏变量"><a href="#修改宏变量" class="headerlink" title="修改宏变量"></a>修改宏变量</h2><p>我们需要把template中的这个宏改成如下格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`&lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;/&lt;location&gt;/`.</span><br></pre></td></tr></table></figure><img src="/2025/01/09/Zabbix-%E7%9B%91%E6%8E%A7Nginx/plus_2.png" class="" title="图片"><h2 id="刷新即可"><a href="#刷新即可" class="headerlink" title="刷新即可"></a>刷新即可</h2><img src="/2025/01/09/Zabbix-%E7%9B%91%E6%8E%A7Nginx/plus_3.png" class="" title="图片"><p>能看到已经自动添加了很多很多的监控项了，基本上每一个stream，每一个zone都有对应的监控，功能比单纯的status监控多得多</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在项目中使用Nginx之后，有时候我们需要知道Nginx具体的工作情况，这时候就需要使用zabbix进行Nginx的相关监控&lt;br&gt;这边我们</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-对接MySQL数据库的一些注意点</title>
    <link href="https://maydaychen.github.io/2025/01/02/Grafana-%E5%AF%B9%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
    <id>https://maydaychen.github.io/2025/01/02/Grafana-%E5%AF%B9%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E7%82%B9/</id>
    <published>2025-01-02T08:02:23.000Z</published>
    <updated>2025-02-11T06:19:57.501Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>之前zabbix有一个需求是监控每一笔交易的耗时，即结束时间-开始时间，现在由于业务需求，需要在Grafana中统计所有交易时间的占比，分组并展示<br>但是接入的zabbix插件并不支持该功能，zabbix插件只能够查询出每个interval间隔内的数据并展示，并不能将所有时间内的数据汇总并分析，所以冥思苦想之下，只能接入zabbix的mysql，用sql脚本的形式获取数据</p><h1 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h1><p>思路就是，把对应的host group中的所有的host对应的每一个item，从item表中取出并在history表中查询一段时间内的所有数据，并按照大小进行分组</p><h1 id="接入Zabbix数据源"><a href="#接入Zabbix数据源" class="headerlink" title="接入Zabbix数据源"></a>接入Zabbix数据源</h1><p>data source选择mysql，然后只需要填入API信息以及用户名密码，点击最下面的save&amp;test就可以看连接是否成功了</p><img src="/2025/01/02/Grafana-%E5%AF%B9%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E7%82%B9/1.png" class="" title="mysql"><h1 id="最终实现"><a href="#最终实现" class="headerlink" title="最终实现"></a>最终实现</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    i.name AS item_name,                      -- Item 名称</span><br><span class="line">    CASE </span><br><span class="line">        WHEN hu.value BETWEEN 0 AND 1000 THEN &#x27;[0s-1s]&#x27; </span><br><span class="line">        WHEN hu.value BETWEEN 1000 AND 2000 THEN &#x27;[1s-2s]&#x27; </span><br><span class="line">        WHEN hu.value BETWEEN 2000 AND 3000 THEN &#x27;[2s-3s]&#x27; </span><br><span class="line">        WHEN hu.value BETWEEN 3000 AND 4000 THEN &#x27;[3s-4s]&#x27; </span><br><span class="line">        WHEN hu.value BETWEEN 4000 AND 5000 THEN &#x27;[4s-5s]&#x27;</span><br><span class="line">        ELSE &#x27;Other&#x27; </span><br><span class="line">    END AS value_range,</span><br><span class="line">    COUNT(*) AS count</span><br><span class="line">FROM </span><br><span class="line">    history hu</span><br><span class="line">JOIN </span><br><span class="line">    items i ON hu.itemid = i.itemid</span><br><span class="line">JOIN </span><br><span class="line">    hosts h ON i.hostid = h.hostid</span><br><span class="line">JOIN </span><br><span class="line">    hosts_groups hg ON h.hostid = hg.hostid</span><br><span class="line">JOIN </span><br><span class="line">    hstgrp g ON hg.groupid = g.groupid</span><br><span class="line">WHERE </span><br><span class="line">    g.name IN (&#x27;host group name&#x27;)</span><br><span class="line">    AND i.name REGEXP &#x27;^transaction time \\[$TXN_TYPE\\]&#x27; </span><br><span class="line">    AND hu.clock BETWEEN &#x27;$__unixEpochFrom()&#x27; AND &#x27;$__unixEpochTo()&#x27;</span><br><span class="line">GROUP BY </span><br><span class="line">    value_range</span><br><span class="line">ORDER BY </span><br><span class="line">    value_range; </span><br></pre></td></tr></table></figure><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><h2 id="transaction-time-TXN-TYPE-无法获取到数据"><a href="#transaction-time-TXN-TYPE-无法获取到数据" class="headerlink" title="^transaction time [$TXN_TYPE]  无法获取到数据"></a>^transaction time [$TXN_TYPE]  无法获取到数据</h2><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>在 MySQL 中，使用 REGEXP 时，特殊字符（如方括号 [ ]）具有特定的含义。例如，[ ] 通常用于定义字符集（例如，[a-z] 匹配所有小写字母）。因此，您的正则表达式 ^Transaction Time of type [Sale] 中的方括号被解释为字符集匹配，而不是字面匹配。<br>为了让 MySQL 将方括号视为普通字符，而不是正则表达式的特殊符号，需要对它们进行 转义。</p><p>正确写法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i.name REGEXP &#x27;^transaction time \\[$TXN_TYPE\\]&#x27; </span><br></pre></td></tr></table></figure><h2 id="timeFilter-hu-clock-没有作用"><a href="#timeFilter-hu-clock-没有作用" class="headerlink" title="$__timeFilter(hu.clock)没有作用"></a>$__timeFilter(hu.clock)没有作用</h2><p>本来没有定义查询的时间范围，后来想要根据Grafana上的时间自动修改时间，于是想着用上$__timeFilter(hu.clock)这个方法，但是始终检索不出来任何结果，于是看了下它的查询</p><h3 id="调查"><a href="#调查" class="headerlink" title="调查"></a>调查</h3><p>发现他会把这个方法转换成如下的语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">AND</span> hu.clock <span class="keyword">BETWEEN</span> FROM_UNIXTIME(<span class="number">1704179643</span>) <span class="keyword">AND</span> FROM_UNIXTIME(<span class="number">1735802043</span>)</span><br></pre></td></tr></table></figure><blockquote><p>from_unixtime是MySQL里的时间函数date为需要处理的参数（该参数是Unix 时间戳），可以是字段名，也可以直接是Unix 时间戳字符串后面的 &#39;%Y%m%d&#39; 主要是将返回值格式化。<br>百度百科附上： <a href="https://baike.baidu.com/item/from_unixtime/1801387?fr=ge_ala">https://baike.baidu.com/item/from_unixtime/1801387?fr=ge_ala</a></p></blockquote><p>但是在数据库中，该clock字段就是按照时间戳来保存的，所以说根本就不需要转换成字符串格式</p><h3 id="修改sql语句"><a href="#修改sql语句" class="headerlink" title="修改sql语句"></a>修改sql语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">AND</span> hu.clock <span class="keyword">BETWEEN</span> <span class="string">&#x27;$__timeFrom()&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;$__timeTo()&#x27;</span></span><br></pre></td></tr></table></figure><p>依旧无效,于是查看<a href="https://grafana.com/docs/grafana/latest/datasources/mysql/#macros">官网上的说明</a>，发现$__timeFrom()其实还是会转换成FROM_UNIXTIME(1494410783)<br>这边我们应该用的是$__unixEpochFrom()和$__unixEpochTo()</p><h3 id="最终解决方案"><a href="#最终解决方案" class="headerlink" title="最终解决方案"></a>最终解决方案</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AND hu.clock BETWEEN &#x27;$__unixEpochFrom()&#x27; AND &#x27;$__unixEpochTo()&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;之前zabbix有一个需求是监控每一笔交易的耗时，即结束时间-开始时间，现在由于业务需求，需要在Grafana中统计所有交易时间的占比，分组</summary>
      
    
    
    
    <category term="运维" scheme="https://maydaychen.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="监控" scheme="https://maydaychen.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
</feed>
