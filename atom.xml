<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexotest</title>
  
  <subtitle>hei</subtitle>
  <link href="https://maydaychen.github.io/atom.xml" rel="self"/>
  
  <link href="https://maydaychen.github.io/"/>
  <updated>2023-11-20T14:05:57.731Z</updated>
  <id>https://maydaychen.github.io/</id>
  
  <author>
    <name>Maydaychen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小翼管家获取电信光猫超密教程</title>
    <link href="https://maydaychen.github.io/2023/11/20/%E5%B0%8F%E7%BF%BC%E7%AE%A1%E5%AE%B6%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E8%B6%85%E5%AF%86%E6%95%99%E7%A8%8B/"/>
    <id>https://maydaychen.github.io/2023/11/20/%E5%B0%8F%E7%BF%BC%E7%AE%A1%E5%AE%B6%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E8%B6%85%E5%AF%86%E6%95%99%E7%A8%8B/</id>
    <published>2023-11-20T14:03:14.000Z</published>
    <updated>2023-11-20T14:05:57.731Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="https://www.bilibili.com/read/cv22351257/">https://www.bilibili.com/read/cv22351257/</a><br>自用，侵删</p><p>方法一：苹果手机（最简单）</p><p>苹果手机在App Store下载抓包软件stream，及小翼管家（绑定光猫）。连接光猫WiFi</p><p> </p><p>stream软件打开HTTMS抓包，安装CA证书并信任</p><p> </p><p>点击开始抓包，打开小翼管家，点击网关设置，然后随便点击（比如指示灯，不点也可以）。</p><p>回到stream，停止抓包。点击抓包历史。全部请求找到任意一个含有token&#x3D;的POST网址并点击进去（不行就多试几个POST网址），点击右上角向上的箭头，弹出更多操作，点击编辑重放请求。</p><p> </p><p>点击最下面的请求体最下面一行，点击原始数据，删除清空并粘贴以下代码并点击存储：（注意格式）</p><p> </p><p> </p><p>{ “Params”: [], “MethodName”: “GetTAPasswd”, “RPCMethod”: “CallMethod”, “ObjectPath”: “&#x2F;com&#x2F;ctc&#x2F;igd1&#x2F;Telecom&#x2F;System”, “InterfaceName”: “com.ctc.igd1.SysCmd”, “ServiceName”: “com.ctc.igd1” }</p><p> </p><p> </p><p>最后点击右上角开始按钮，点击响应最下面的BODY即可看到（如果结果返回错误，原因是以上的代码格式不正确或者是POST网址没找对）</p><p> </p><p>注：密码格式：telecomadmin12345678，账号默认是telecomadmin。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转自&lt;a href=&quot;https://www.bilibili.com/read/cv22351257/&quot;&gt;https://www.bilibili.com/read/cv22351257/&lt;/a&gt;&lt;br&gt;自用，侵删&lt;/p&gt;
&lt;p&gt;方法一：苹果手机（最简单）&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="NAS" scheme="https://maydaychen.github.io/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统盘扩容</title>
    <link href="https://maydaychen.github.io/2023/11/13/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E6%89%A9%E5%AE%B9/"/>
    <id>https://maydaychen.github.io/2023/11/13/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E6%89%A9%E5%AE%B9/</id>
    <published>2023-11-13T11:13:57.000Z</published>
    <updated>2023-11-14T05:39:11.887Z</updated>
    
    <content type="html"><![CDATA[<ol><li>先在云控制台新增容量</li><li>运行下面的命令以查看根目录目前的容量</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ df -hT</span><br><span class="line">Filesystem     Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs       devtmpfs  461M     0  461M   0% /dev</span><br><span class="line">tmpfs          tmpfs     479M     0  479M   0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     479M  780K  478M   1% /run</span><br><span class="line">tmpfs          tmpfs     479M     0  479M   0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  5.6G  2.5G  70% /</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/1015</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/1014</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/0</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/1028</span><br></pre></td></tr></table></figure><p>运行下面的命令来查看实际容量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0  15G  0 disk</span><br><span class="line">|-nvme0n1p1   259:1    0   8G  0 part /</span><br><span class="line">`-nvme0n1p128 259:2    0   1M  0 part</span><br></pre></td></tr></table></figure><ol start="3"><li>运行下面的命令来增加容量（最后的1为目标盘在这个nvme0n1）中的序号</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ sudo growpart /dev/nvme0n1 1</span><br><span class="line">CHANGED: partition=1 start=4096 old: size=16773087 end=16777183 new: size=31453151 end=31457247</span><br></pre></td></tr></table></figure><p>为了验证容量是否已经被添加, 我们可以再次使用lsblk命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0  15G  0 disk</span><br><span class="line">|-nvme0n1p1   259:1    0  15G  0 part /</span><br><span class="line">`-nvme0n1p128 259:2    0   1M  0 part</span><br></pre></td></tr></table></figure><ol start="4"><li>根据文件系统不同运行不同的命令</li></ol><p>如果是xfs文件系统: sudo xfs_growfs  -d &#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ sudo xfs_growfs -d /</span><br><span class="line">meta-data=/dev/nvme0n1p1         isize=512    agcount=4, agsize=524159 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=2096635, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 2096635 to 3931643</span><br></pre></td></tr></table></figure><p>如果是ext4文件系统:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo resize2fs /dev/nvme5n1p2</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;先在云控制台新增容量&lt;/li&gt;
&lt;li&gt;运行下面的命令以查看根目录目前的容量&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置反向代理时出现的13: Permission denied) while connecting to upstream, client: 127.0.0.1</title>
    <link href="https://maydaychen.github.io/2023/11/01/Nginx%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%8413-Permission-denied-while-connecting-to-upstream-client-127-0-0-1/"/>
    <id>https://maydaychen.github.io/2023/11/01/Nginx%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%8413-Permission-denied-while-connecting-to-upstream-client-127-0-0-1/</id>
    <published>2023-11-01T07:09:12.000Z</published>
    <updated>2023-11-14T05:19:44.219Z</updated>
    
    <content type="html"><![CDATA[<ol><li>条件不允许的情况下（不能随意重启计算机）执行下列代码：</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect <span class="number">1</span></span><br></pre></td></tr></table></figure><ol start="2"><li>其他情况下, 可以获取root权限，通过root修改&#x2F;etc&#x2F;selinux&#x2F;config</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">vim /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">SELINUX</span>=enforcing</span><br><span class="line">改为</span><br><span class="line"><span class="variable constant_">SELINUX</span>=disabled</span><br><span class="line"></span><br><span class="line">重启服务器</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;条件不允许的情况下（不能随意重启计算机）执行下列代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    
    <category term="Nginx" scheme="https://maydaychen.github.io/tags/Nginx/"/>
    
    <category term="Linux" scheme="https://maydaychen.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>hexo g报错 Cannot read properties of undefined (reading &#39;count&#39;)</title>
    <link href="https://maydaychen.github.io/2023/08/27/hexo-g%E6%8A%A5%E9%94%99-Cannot-read-properties-of-undefined-reading-count/"/>
    <id>https://maydaychen.github.io/2023/08/27/hexo-g%E6%8A%A5%E9%94%99-Cannot-read-properties-of-undefined-reading-count/</id>
    <published>2023-08-27T14:07:18.000Z</published>
    <updated>2023-08-27T14:12:50.029Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在编译博客的时候，发现了一个问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError: Cannot read properties of undefined (reading &#x27;</span>count<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    at module.exports (/Users/xxx/Documents/blog/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41)</span></span><br><span class="line"><span class="string">    at Hexo.tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Hexo.&lt;anonymous&gt; (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/method.js:15:34)</span></span><br><span class="line"><span class="string">    at /Users/xxx/Documents/blog/node_modules/hexo/lib/hexo/index.js:407:22</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at MappingPromiseArray._promiseFulfilled (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:68:38)</span></span><br><span class="line"><span class="string">    at PromiseArray._iterate (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:115:31)</span></span><br><span class="line"><span class="string">    at MappingPromiseArray.init (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:79:10)</span></span><br><span class="line"><span class="string">    at MappingPromiseArray._asyncInit (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:37:10)</span></span><br><span class="line"><span class="string">    at _drainQueueStep (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:97:12)</span></span><br><span class="line"><span class="string">    at _drainQueue (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:86:9)</span></span><br><span class="line"><span class="string">    at Async._drainQueues (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:102:5)</span></span><br><span class="line"><span class="string">    at Async.drainQueues [as _onImmediate] (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:15:14)</span></span><br><span class="line"><span class="string">    at process.processImmediate (node:internal/timers:476:21)</span></span><br></pre></td></tr></table></figure><h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g --debug</span><br></pre></td></tr></table></figure><p>通过debug模式查看问题所在，发现问题所在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">14:02:48.751 DEBUG Generator: post</span><br><span class="line">14:02:48.753 DEBUG Generator: archive</span><br><span class="line">14:02:48.753 DEBUG Generator: index</span><br><span class="line">14:02:48.754 DEBUG Generator: atom</span><br><span class="line">14:02:48.762 DEBUG Generator: baidu_url_generator</span><br><span class="line">14:02:48.763 FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure><h2 id="Issue-Link"><a href="#Issue-Link" class="headerlink" title="Issue Link"></a>Issue Link</h2><p><a href="https://github.com/hexojs/hexo/issues/2402">https://github.com/hexojs/hexo/issues/2402</a></p><h2 id="该插件的相关文档"><a href="#该插件的相关文档" class="headerlink" title="该插件的相关文档"></a>该插件的相关文档</h2><p><a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/">https://hui-wang.info/2016/10/23/Hexo插件之百度主动提交链接/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;在编译博客的时候，发现了一个问题&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla</summary>
      
    
    
    
    <category term="博客相关" scheme="https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Hexo" scheme="https://maydaychen.github.io/tags/Hexo/"/>
    
    <category term="插件" scheme="https://maydaychen.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门(1)--Docker概述</title>
    <link href="https://maydaychen.github.io/2023/08/27/Docker%E5%85%A5%E9%97%A8-1-Docker%E6%A6%82%E8%BF%B0/"/>
    <id>https://maydaychen.github.io/2023/08/27/Docker%E5%85%A5%E9%97%A8-1-Docker%E6%A6%82%E8%BF%B0/</id>
    <published>2023-08-27T09:49:33.000Z</published>
    <updated>2023-08-27T10:19:52.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker与虚拟机的对比"><a href="#Docker与虚拟机的对比" class="headerlink" title="Docker与虚拟机的对比"></a>Docker与虚拟机的对比</h2><p>虚拟机技术缺点：</p><ul><li>资源占用十分多</li><li>冗余步骤多（比如开机等）</li><li>启动很慢</li></ul><p>Docker和传统虚拟机的不同： </p><ul><li>传统虚拟机需要虚拟出一个硬件，运行一整个操作系统，然后在系统上安装和运行软件</li><li>容器内的应用直接运行在宿主机，容器没有自己的内核的， 也没有虚拟硬件，所以很轻便</li><li>每个容器之间互相隔离，每个容器内都有一个属于自己的文件系统，互不影响</li></ul><h2 id="Docker组成"><a href="#Docker组成" class="headerlink" title="Docker组成"></a>Docker组成</h2><h3 id="镜像Image："><a href="#镜像Image：" class="headerlink" title="镜像Image："></a>镜像Image：</h3><p>就好比一个模版，可以通过模版来创建容器服务</p><p>通过镜像可以创建多个容器（最终服务&#x2F;项目运行就在容器中）</p><h3 id="容器Container："><a href="#容器Container：" class="headerlink" title="容器Container："></a>容器Container：</h3><p>Docker利用容器技术，独立运行一个或一组应用，通过镜像来创建</p><p>基本命令：启动，停止，删除</p><p>目前可以把容器理解为一个简易的Linux系统</p><h3 id="仓库Registry-远程仓库"><a href="#仓库Registry-远程仓库" class="headerlink" title="仓库Registry: 远程仓库"></a>仓库Registry: 远程仓库</h3><p>存放镜像的地方，就好比代码放git</p><p>仓库分为公有仓库和私有仓库</p><p>如Docker Hub(默认都是国内的，需要配置镜像加速)</p><p>云服务商都有容器服务器</p><h2 id="Docker是怎么工作的"><a href="#Docker是怎么工作的" class="headerlink" title="Docker是怎么工作的"></a>Docker是怎么工作的</h2><p>Docker是一个Client-Server架构的系统，Docker的守护进程运行在主机上，通过Socket从客户端访问</p><p>DockerServer接收到DockerClient的指令，就会执行这个指令</p><h2 id="Docker为什么比VM快"><a href="#Docker为什么比VM快" class="headerlink" title="Docker为什么比VM快"></a>Docker为什么比VM快</h2><p>Docker有着比VM更少的抽象层</p><p>Docker利用的是宿主机的内核，但VM需要加载一个分钟级别的Guest OS</p><p>所以说，新建一个容器的时候，docker不需要像VM一样重新加载一个OS的内核，省略了加载Guest OS的过程，所以会很快</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker与虚拟机的对比&quot;&gt;&lt;a href=&quot;#Docker与虚拟机的对比&quot; class=&quot;headerlink&quot; title=&quot;Docker与虚拟机的对比&quot;&gt;&lt;/a&gt;Docker与虚拟机的对比&lt;/h2&gt;&lt;p&gt;虚拟机技术缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源占用</summary>
      
    
    
    
    <category term="Docker相关" scheme="https://maydaychen.github.io/categories/Docker%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Docker" scheme="https://maydaychen.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://maydaychen.github.io/2023/08/12/hello-world/"/>
    <id>https://maydaychen.github.io/2023/08/12/hello-world/</id>
    <published>2023-08-12T01:34:30.754Z</published>
    <updated>2023-08-12T01:34:30.754Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
