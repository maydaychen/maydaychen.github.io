<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexotest</title>
  
  <subtitle>hei</subtitle>
  <link href="https://maydaychen.github.io/atom.xml" rel="self"/>
  
  <link href="https://maydaychen.github.io/"/>
  <updated>2024-03-15T16:45:49.638Z</updated>
  <id>https://maydaychen.github.io/</id>
  
  <author>
    <name>Maydaychen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Zabbix-监控的目标主机默认只显示20条图形(zabbix显示/不全/缺失)</title>
    <link href="https://maydaychen.github.io/2024/03/16/Zabbix-%E7%9B%91%E6%8E%A7%E7%9A%84%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E9%BB%98%E8%AE%A4%E5%8F%AA%E6%98%BE%E7%A4%BA20%E6%9D%A1%E5%9B%BE%E5%BD%A2-zabbix%E6%98%BE%E7%A4%BA-%E4%B8%8D%E5%85%A8-%E7%BC%BA%E5%A4%B1/"/>
    <id>https://maydaychen.github.io/2024/03/16/Zabbix-%E7%9B%91%E6%8E%A7%E7%9A%84%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E9%BB%98%E8%AE%A4%E5%8F%AA%E6%98%BE%E7%A4%BA20%E6%9D%A1%E5%9B%BE%E5%BD%A2-zabbix%E6%98%BE%E7%A4%BA-%E4%B8%8D%E5%85%A8-%E7%BC%BA%E5%A4%B1/</id>
    <published>2024-03-15T16:45:32.000Z</published>
    <updated>2024-03-15T16:45:49.638Z</updated>
    
    <content type="html"><![CDATA[<p>监控的目标主机默认只显示20条图形 ( zabbix 显示 不全 缺失)</p><p>解决方法：sudo vi &#x2F;usr&#x2F;share&#x2F;zabbix&#x2F;include&#x2F;defines.inc.php 修改文件</p><p><code>ZBX_MAX_GRAPHS_P ER_PAGE</code>  这个变量默认是20，把它改成60</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;监控的目标主机默认只显示20条图形 ( zabbix 显示 不全 缺失)&lt;/p&gt;
&lt;p&gt;解决方法：sudo vi &amp;#x2F;usr&amp;#x2F;share&amp;#x2F;zabbix&amp;#x2F;include&amp;#x2F;defines.inc.php 修改文件&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/categories/Linux/"/>
    
    
    <category term="Zabbix" scheme="https://maydaychen.github.io/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Grafana-Origin not allowed</title>
    <link href="https://maydaychen.github.io/2024/03/16/Grafana-Origin-not-allowed/"/>
    <id>https://maydaychen.github.io/2024/03/16/Grafana-Origin-not-allowed/</id>
    <published>2024-03-15T16:44:22.000Z</published>
    <updated>2024-03-15T16:45:04.466Z</updated>
    
    <content type="html"><![CDATA[<p>上周 Grafana 工作没有任何问题，但更新到 8.3.5 后我无法再登录。<br>在登录屏幕中，输入我的用户名和密码后，会出现一条消息：“Origin not allowed”。 在 grafana.log 文件中，我看到一行：<br>lvl&#x3D;eror msg&#x3D;”无法根据 cookie 查找用户” logger&#x3D;context error&#x3D;”未找到用户令牌”</p><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p>在nginx的conf.d文件中，有一个grafana.conf的文件，需要在配置文件中增加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Host $http_host; //added after upgrade from 8.1 to 8.4.1 for origin not allowed error</span><br></pre></td></tr></table></figure><p>但是发现还是不行，看到说可以把$http_host改成自己的domain，于是尝试下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Host domain.com</span><br></pre></td></tr></table></figure><p>最后重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br><span class="line">sudo systemctl status nginx</span><br></pre></td></tr></table></figure><p>然后刷新页面，登录，可以进去了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上周 Grafana 工作没有任何问题，但更新到 8.3.5 后我无法再登录。&lt;br&gt;在登录屏幕中，输入我的用户名和密码后，会出现一条消息：“Origin not allowed”。 在 grafana.log 文件中，我看到一行：&lt;br&gt;lvl&amp;#x3D;eror msg</summary>
      
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/categories/Linux/"/>
    
    
    <category term="Grafana" scheme="https://maydaychen.github.io/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Mac-Terminal终端没有ll命令解决办法</title>
    <link href="https://maydaychen.github.io/2024/03/16/Mac-Terminal%E7%BB%88%E7%AB%AF%E6%B2%A1%E6%9C%89ll%E5%91%BD%E4%BB%A4%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://maydaychen.github.io/2024/03/16/Mac-Terminal%E7%BB%88%E7%AB%AF%E6%B2%A1%E6%9C%89ll%E5%91%BD%E4%BB%A4%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2024-03-15T16:26:52.000Z</published>
    <updated>2024-03-15T16:40:36.736Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>首先在 ~&#x2F;.bash_profile 文件中加入如下命令(如果没有就touch一个)<br><code>alias ll=&#39;ls -alF&#39;</code></p></li><li><p>随后执行<br><code>source ~/.bash_profile</code><br>命令，使修改生效</p></li></ol><p>这样就可以使用 ll 命令了，但是这样有一个问题，每次新开的终端 ll 命令都会失效</p><hr><p>以下是解决方案</p><ol><li><p>在 ～&#x2F;.zshrc 文件中加入如下命令<br><code>source ~/.bash_profile</code><br>如果找不到.zshrc 文件，跟上面一样touch一个就完事了</p></li><li><p>执行<br><code>source ~/.zshrc</code><br>使文件生效，之后的每次ll就都会起作用了</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先在 ~&amp;#x2F;.bash_profile 文件中加入如下命令(如果没有就touch一个)&lt;br&gt;&lt;code&gt;alias ll=&amp;#39;ls -alF&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随后执行&lt;br&gt;&lt;code&gt;sourc</summary>
      
    
    
    
    <category term="Mac" scheme="https://maydaychen.github.io/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac-Edge浏览器跟Chrome浏览器触控板无法右击的解决办法</title>
    <link href="https://maydaychen.github.io/2024/03/16/Mac-Edge%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%9FChrome%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A7%A6%E6%8E%A7%E6%9D%BF%E6%97%A0%E6%B3%95%E5%8F%B3%E5%87%BB%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://maydaychen.github.io/2024/03/16/Mac-Edge%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%9FChrome%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A7%A6%E6%8E%A7%E6%9D%BF%E6%97%A0%E6%B3%95%E5%8F%B3%E5%87%BB%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2024-03-15T16:25:55.000Z</published>
    <updated>2024-03-15T16:27:40.227Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>不知道从什么时候开始，用mac的触控板，双指点击已经无法在浏览器上跳出右键的那个菜单了，实测edge跟chrome都一样</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p><img src="https://upload-images.jianshu.io/upload_images/1987727-90934d564fa2b916.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="插件截图"><br>经过各种测试，发现是因为我装了一个crxMouse插件，该插件会有一个Linux&#x2F;Mac选项，如果把它去掉勾选，问题解决，所以确定是因为这个<br>至于这是干嘛的，不太确定，不过毕竟现在已经不用鼠标，转投触控板，所以这个插件对我来说也没有什么用了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;不知道从什么时候开始，用mac的触控板，双指点击已经无法在浏览器上跳出右键的那个菜单了，实测edge跟chrome都一样&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="Mac" scheme="https://maydaychen.github.io/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Alfred 支持edge浏览器书签</title>
    <link href="https://maydaychen.github.io/2024/03/15/Alfred-%E6%94%AF%E6%8C%81edge%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE/"/>
    <id>https://maydaychen.github.io/2024/03/15/Alfred-%E6%94%AF%E6%8C%81edge%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE/</id>
    <published>2024-03-15T09:37:26.000Z</published>
    <updated>2024-03-15T09:38:52.855Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，在Alfred上只有Safari跟Chrome浏览器的支持，甚至都不可以选择别的浏览器<br>在Alfred 社区里，开发者也是直接说了这两个是mac上的用的人最多的浏览器，目前没有添加其他浏览器书签支持的计划，所以我们只能自己摸索<br>但是说实在的，edge浏览器在国内有着先天的优势，各种同步功能的正常使用已经让它在国内越来越受欢迎，所以加入一个edge浏览器的支持个人认为还是很有必要的</p><h2 id="低效方法："><a href="#低效方法：" class="headerlink" title="低效方法："></a>低效方法：</h2><p>装一个Chrome, 然后把edge书签导入过去</p><p>好了，不开玩笑了，下面记录一个在社区看到的很好用的方法</p><h2 id="正经记录"><a href="#正经记录" class="headerlink" title="正经记录"></a>正经记录</h2><p>step 1. 还是需要一个chrome浏览器，所以还是装一个吧<br>step 2. link edge’s bookmarks to chrome<br><code>cd ~/Library/Application\ Support/Google/Chrome/Default</code><br><code>//这一步如果新安装的chrome是不需要的，因为没有这个文件 mv Bookmarks  Bookmarks_233.bak</code><br><code>ln -s  ~/Library/Application\ Support/Microsoft\ Edge/Default/Bookmarks  ./Bookmarks</code><br>贴一个ln -s命令详解<br><a href="https://blog.csdn.net/qianxuedegushi/article/details/108145547">https://blog.csdn.net/qianxuedegushi/article/details/108145547</a></p><p>然后再用alfred试一下，可以显示edge的书签了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;众所周知，在Alfred上只有Safari跟Chrome浏览器的支持，甚至都不可以选择别的浏览器&lt;br&gt;在Alfred 社区里，开发者也是直接说了这两个是mac上的用的人最多的浏览器，目前没有添加其他浏览器书签支持的计划，所以我们只能自己摸索&lt;br&gt;但是说实在的，edge浏</summary>
      
    
    
    
    <category term="Tools" scheme="https://maydaychen.github.io/categories/Tools/"/>
    
    
    <category term="Alfred" scheme="https://maydaychen.github.io/tags/Alfred/"/>
    
  </entry>
  
  <entry>
    <title>Git配置代理</title>
    <link href="https://maydaychen.github.io/2024/03/14/Git%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>https://maydaychen.github.io/2024/03/14/Git%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/</id>
    <published>2024-03-13T23:05:42.000Z</published>
    <updated>2024-03-15T09:58:22.679Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a><a href="https://www.cnblogs.com/cscshi/p/15705045.html#21-%E9%92%88%E5%AF%B9%E6%89%80%E6%9C%89%E5%9F%9F%E5%90%8D%E7%9A%84-git-%E4%BB%93%E5%BA%93">参考文章</a></h2><p>文章写的很棒，我就是参考这个</p><h2 id="配置git代理（带用户名）"><a href="#配置git代理（带用户名）" class="headerlink" title="配置git代理（带用户名）"></a>配置git代理（带用户名）</h2><p>git config –global http.proxy <a href="http://username:pass@server:port">http://username:pass@server:port</a><br>git config –global https.proxy <a href="https://username:pass@server:port">https://username:pass@server:port</a></p><h2 id="打开git配置文件"><a href="#打开git配置文件" class="headerlink" title="打开git配置文件"></a>打开git配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open ~/.gitconfig</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/cscshi/p/15705045.html#21-%E9%92%88%E5%AF</summary>
      
    
    
    
    <category term="Tools" scheme="https://maydaychen.github.io/categories/Tools/"/>
    
    
    <category term="Git" scheme="https://maydaychen.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Linux相关简易操作汇总</title>
    <link href="https://maydaychen.github.io/2024/02/15/Linux%E7%9B%B8%E5%85%B3%E7%AE%80%E6%98%93%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/"/>
    <id>https://maydaychen.github.io/2024/02/15/Linux%E7%9B%B8%E5%85%B3%E7%AE%80%E6%98%93%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/</id>
    <published>2024-02-15T07:22:23.000Z</published>
    <updated>2024-03-15T09:58:54.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu获取root权限"><a href="#Ubuntu获取root权限" class="headerlink" title="Ubuntu获取root权限"></a>Ubuntu获取root权限</h2><ol><li><p>输入命令：sudo su;</p></li><li><p>屏幕上会回显要求输入当前用户密码的提示，输入密码即可获得管理员权限;</p></li><li><p>若想退出管理员权限可输入命令：su 用户名.</p></li></ol><h2 id="Ubuntu-vim显示行数"><a href="#Ubuntu-vim显示行数" class="headerlink" title="Ubuntu vim显示行数"></a>Ubuntu vim显示行数</h2><ol><li><p>进入终端，在命令行中输入cd  &#x2F;etc&#x2F;vim 后敲回车，进入&#x2F;etc&#x2F;vim目录；</p></li><li><p>进入etc&#x2F;vim目录后，找到vimrc文件（vim的初始化文件），使用cp命令对其进行备份，命令为：cp  vimrc  vimrc.bak（必须要有管理员权限，否则无法成功）</p></li><li><p>用管理员权限打开vimrc，命令为：sudo  vi  vimrc</p></li><li><p>打开后，在vimrc文件最后加入一行命令：set  nu;</p></li><li><p>加完后，写入，退出，（esc -&gt; :wq），重新使用vim打开任意文件即可发现有行号的标示。</p></li></ol><h2 id="navicat-for-MySQL无法连接Linux服务器中的MySQL-1130错误"><a href="#navicat-for-MySQL无法连接Linux服务器中的MySQL-1130错误" class="headerlink" title="navicat for MySQL无法连接Linux服务器中的MySQL  1130错误"></a>navicat for MySQL无法连接Linux服务器中的MySQL  1130错误</h2><ol><li><p>输入mysql  -p进入MySQL，输入密码</p></li><li><p>mysql&gt; grant all privileges on <em>.</em> to root@”%” identified by “root”;<br>结果如下：Query OK, 0 rows affected, 1 warning (0.00 sec)</p></li><li><p>退出数据库mysql&gt; exit</p></li><li><p>将&#x2F;etc&#x2F;mysql&#x2F;my.cnf文件中bind-address&#x3D;127.0.0.1 这句话注释掉</p></li><li><p>sudo &#x2F;etc&#x2F;init.d&#x2F;mysql restart 重启MySQL服务<br>成功！此时navicat客户端已可连接服务器MySQL</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Ubuntu获取root权限&quot;&gt;&lt;a href=&quot;#Ubuntu获取root权限&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu获取root权限&quot;&gt;&lt;/a&gt;Ubuntu获取root权限&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;输入命令：sudo su;</summary>
      
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx代理端口</title>
    <link href="https://maydaychen.github.io/2024/01/25/Nginx%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3/"/>
    <id>https://maydaychen.github.io/2024/01/25/Nginx%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3/</id>
    <published>2024-01-25T06:57:07.000Z</published>
    <updated>2024-03-15T09:58:22.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx-安装"><a href="#Nginx-安装" class="headerlink" title="Nginx 安装"></a>Nginx 安装</h2><p>参照这个链接就好了<br><a href="http://nginx.org/en/linux_packages.html#RHEL">http://nginx.org/en/linux_packages.html#RHEL</a><br>使用nginx -V， 看到如下界面，就OK了<br><img src="https://upload-images.jianshu.io/upload_images/1987727-2018f8d16677a872.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>在&#x2F;etc&#x2F;nginx&#x2F;nginx.conf最下面加入如下代码<br><code>shell stream &#123; upstream ssh&#123; server 127.0.0.1:22; &#125; server &#123; listen 8022; proxy_connect_timeout 1h; proxy_timeout 1h; proxy_pass ssh; &#125; &#125; </code></p><h2 id="重载配置"><a href="#重载配置" class="headerlink" title="重载配置"></a>重载配置</h2><p><code>systemctl reload nginx</code><br>然后就可以用8022端口去连接服务器啦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nginx-安装&quot;&gt;&lt;a href=&quot;#Nginx-安装&quot; class=&quot;headerlink&quot; title=&quot;Nginx 安装&quot;&gt;&lt;/a&gt;Nginx 安装&lt;/h2&gt;&lt;p&gt;参照这个链接就好了&lt;br&gt;&lt;a href=&quot;http://nginx.org/en/linu</summary>
      
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/categories/Linux/"/>
    
    
    <category term="Nginx" scheme="https://maydaychen.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>HomeAssistant笔记--更换iOS Themes主题</title>
    <link href="https://maydaychen.github.io/2023/11/25/HomeAssistant%E6%9B%B4%E6%8D%A2iOS-Themes%E4%B8%BB%E9%A2%98_chenyideMacBook-Pro.local_Mar-15-211502-2024_CaseConflict/"/>
    <id>https://maydaychen.github.io/2023/11/25/HomeAssistant%E6%9B%B4%E6%8D%A2iOS-Themes%E4%B8%BB%E9%A2%98_chenyideMacBook-Pro.local_Mar-15-211502-2024_CaseConflict/</id>
    <published>2023-11-24T23:58:37.000Z</published>
    <updated>2024-03-15T09:58:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>主题链接：<br><a href="https://github.com/basnijholt/lovelace-ios-themes">https://github.com/basnijholt/lovelace-ios-themes</a></p><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><ol><li><p>主题需要在HACS中安装，搜索iOS应该就能看到</p></li><li><p>配置中加入:</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文件名： /config/configuration.yaml</span><br><span class="line"></span><br><span class="line"># Load frontend themes from the themes folder</span><br><span class="line">frontend:</span><br><span class="line">  themes: !include_dir_merge_named themes</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>把主题放置在themes下<br>themes文件夹在docker中HA的根目录下</p></li><li><p>建www目录存放图片资源</p><p>注意：www文件夹与themes文件夹同一层级</p><p>在www目录中建立跟themes目录中一样的文件夹名称，例如这里叫做<code>ios-themes</code></p></li><li><p>在www的插件文件夹中，修改ios-themes.yaml</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">主要是这边的修改：</span><br><span class="line">把www改为local，路径更改</span><br><span class="line"></span><br><span class="line">background-<span class="attr">image</span>: <span class="string">&quot;center / cover no-repeat fixed url(&#x27;/hacsfiles/themes/homekit-bg-dark-green.jp</span></span><br><span class="line"><span class="string">g&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line">改成</span><br><span class="line"></span><br><span class="line">background-<span class="attr">image</span>: <span class="string">&quot;center / cover no-repeat fixed url(&#x27;/local/ios-themes/homeki</span></span><br><span class="line"><span class="string">t-bg-dark-green.jpg&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p>local文件夹其实就是值得www文件夹（注意不是把www文件夹改名成local文件夹）</p><p>如果不改的话，系统会找不到这个图片，导致首页不会修改背景图</p></li><li><p>重启HA</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主题链接：&lt;br&gt;&lt;a href=&quot;https://github.com/basnijholt/lovelace-ios-themes&quot;&gt;https://github.com/basnijholt/lovelace-ios-themes&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置</summary>
      
    
    
    
    
    <category term="HA" scheme="https://maydaychen.github.io/tags/HA/"/>
    
  </entry>
  
  <entry>
    <title>Ansible笔记--delegate_to指令</title>
    <link href="https://maydaychen.github.io/2023/11/22/Ansible%E7%AC%94%E8%AE%B0-delegate-to%E6%8C%87%E4%BB%A4/"/>
    <id>https://maydaychen.github.io/2023/11/22/Ansible%E7%AC%94%E8%AE%B0-delegate-to%E6%8C%87%E4%BB%A4/</id>
    <published>2023-11-22T02:22:08.000Z</published>
    <updated>2023-11-22T08:13:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><p>目前执行Ansible的过程中，遇到这么一个需求，在远程服务器上执行一系列操作，但是这个操作需要用到一组数据，该数据存在于Ansible服务器中的一个文件中，但是远程服务器无法读取到该文件，所以查到了这个指令，Ansible 的任务委派功能（delegate_to）。</p><p>使用 delegate_to 关键字可以委派任务到指定的机器上运行。</p><p>在 playbook 的操作如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## 读取指定的localhost上的文件并定义为变量</span><br><span class="line">- <span class="attr">name</span>: read</span><br><span class="line">  <span class="attr">read_csv</span>:</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;&#123;&#123; csv_tmp_path &#125;&#125;&quot;</span></span><br><span class="line">      <span class="attr">delimiter</span>: <span class="string">&#x27;,&#x27;</span></span><br><span class="line">  <span class="attr">register</span>: file_list</span><br><span class="line">  <span class="attr">changed_when</span>: <span class="literal">false</span></span><br><span class="line">  <span class="attr">delegate_to</span>: localhost</span><br></pre></td></tr></table></figure><p>任务委派功能还可以用于以下场景：</p><ul><li>在部署之前将一个主机从一个负载均衡集群中删除；</li><li>当你要对一个主机做改变之前去掉相应 dns 的记录；</li><li>当在一个存储设备上创建 iscsi 卷的时候；</li><li>当使用外的主机来检测网络出口是否正常的时候。</li></ul><h2 id="委托（delegate）"><a href="#委托（delegate）" class="headerlink" title="委托（delegate）"></a>委托（delegate）</h2><p>通过”delegate_to”, 用户可以把某一个任务放在委托的机器上执行.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hosts</span>: webservers</span><br><span class="line"><span class="attr">serial</span>: <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tasks</span>:</span><br><span class="line">    - <span class="attr">name</span>: take out <span class="keyword">of</span> load balancer pool</span><br><span class="line">  <span class="attr">command</span>: <span class="regexp">/usr/</span>bin/take_out_of_pool &#123;&#123; inventory_hostname &#125;&#125;</span><br><span class="line"><span class="attr">delegate_to</span>: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>无论定义了hosts是什么，上面的这个task都只会在localhost(即ansible运行的机器)上执行,</p><p>如果只是想在本地执行，<code>“delegate_to: 127.0.0.1” 也可以用local_action来代替</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tasks</span>:</span><br><span class="line">    - <span class="attr">name</span>: take out <span class="keyword">of</span> load balancer pool</span><br><span class="line">      <span class="attr">local_action</span>: command /usr/bin/take_out_of_pool &#123;&#123; inventory_hostname &#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="委托者的facts"><a href="#委托者的facts" class="headerlink" title="委托者的facts"></a><strong>委托者的facts</strong></h3><p>默认情况下, 委托任务的facts是<code>inventory_hostname</code>中主机的<code>facts</code>, 而不是被委托机器的facts. 在ansible 2.0 中, 设置<code>delegate_facts</code>为true可以让任务去收集被委托机器的facts.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- <span class="attr">hosts</span>: app_servers</span><br><span class="line">  <span class="attr">tasks</span>:</span><br><span class="line">    - <span class="attr">name</span>: gather facts <span class="keyword">from</span> db servers</span><br><span class="line">      <span class="attr">setup</span>:</span><br><span class="line">      <span class="attr">delegate_to</span>: <span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span></span><br><span class="line">      <span class="attr">delegate_facts</span>: <span class="title class_">True</span></span><br><span class="line">      <span class="attr">with_items</span>: <span class="string">&quot;&#123;&#123;groups[&#x27;dbservers&#x27;&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>该例子会收集dbservers的facts并分配给这些机器, 而不会去收集app_servers的facts</p><h2 id="run-once"><a href="#run-once" class="headerlink" title="run_once"></a><strong><strong>run_once</strong></strong></h2><p>通过<code>run_once: true</code>来指定该task只能在某一台机器上执行一次. 可以和<code>delegate_to</code> 结合使用</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- <span class="attr">command</span>: <span class="regexp">/opt/</span>application/upgrade_db.<span class="property">py</span></span><br><span class="line">  <span class="attr">run_once</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">delegate_to</span>: web01.<span class="property">example</span>.<span class="property">org</span></span><br></pre></td></tr></table></figure><p>指定在”web01.example.org”上执行这个task</p><p>如果没有delegate_to, 那么这个task只会在当前主机组的第一台机器上执行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;场景介绍&quot;&gt;&lt;a href=&quot;#场景介绍&quot; class=&quot;headerlink&quot; title=&quot;场景介绍&quot;&gt;&lt;/a&gt;场景介绍&lt;/h2&gt;&lt;p&gt;目前执行Ansible的过程中，遇到这么一个需求，在远程服务器上执行一系列操作，但是这个操作需要用到一组数据，该数据存在于A</summary>
      
    
    
    
    
    <category term="Ansible" scheme="https://maydaychen.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible笔记--获取当前日期时间</title>
    <link href="https://maydaychen.github.io/2023/11/21/Ansible%E7%AC%94%E8%AE%B0-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/"/>
    <id>https://maydaychen.github.io/2023/11/21/Ansible%E7%AC%94%E8%AE%B0-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4/</id>
    <published>2023-11-21T05:34:45.000Z</published>
    <updated>2023-11-21T05:35:38.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="获取当前日期"><a href="#获取当前日期" class="headerlink" title="获取当前日期"></a>获取当前日期</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- <span class="attr">name</span>: <span class="title class_">Display</span> current date and time</span><br><span class="line">  ansible.<span class="property">builtin</span>.<span class="property">debug</span>:</span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;Current date and time is &#123;&#123; ansible_date_time.date &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>获取到的日期格式是YYYY-MM-DD, 如果想改成其他格式，可以使用正则获取年月日</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- <span class="attr">name</span>: <span class="title class_">Format</span> current date</span><br><span class="line">  ansible.<span class="property">builtin</span>.<span class="property">debug</span>:</span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;Formatted date: &#123;&#123; ansible_date_time.date | regex_replace(&#x27;^(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)$&#x27;, &#x27;\\3/\\2/\\1&#x27;) &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>\1 - 年</p><p>\2 - 月</p><p>\3 - 日</p><h2 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- <span class="attr">name</span>: <span class="title class_">Display</span> current date and time</span><br><span class="line">  ansible.<span class="property">builtin</span>.<span class="property">debug</span>:</span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;Current date and time is &#123;&#123; ansible_date_time.time &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>‘ansible_date_time’ is undefined</p><p>解决方案：</p><p><code>ansible_date_time</code>是事实的一部分，所以需要设置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gather_facts</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;获取当前日期&quot;&gt;&lt;a href=&quot;#获取当前日期&quot; class=&quot;headerlink&quot; title=&quot;获取当前日期&quot;&gt;&lt;/a&gt;获取当前日期&lt;/h2&gt;&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    
    <category term="Ansible" scheme="https://maydaychen.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>小翼管家获取电信光猫超密教程</title>
    <link href="https://maydaychen.github.io/2023/11/20/%E5%B0%8F%E7%BF%BC%E7%AE%A1%E5%AE%B6%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E8%B6%85%E5%AF%86%E6%95%99%E7%A8%8B/"/>
    <id>https://maydaychen.github.io/2023/11/20/%E5%B0%8F%E7%BF%BC%E7%AE%A1%E5%AE%B6%E8%8E%B7%E5%8F%96%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%AB%E8%B6%85%E5%AF%86%E6%95%99%E7%A8%8B/</id>
    <published>2023-11-20T14:03:14.000Z</published>
    <updated>2024-03-15T10:00:37.210Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="https://www.bilibili.com/read/cv22351257/">https://www.bilibili.com/read/cv22351257/</a><br>自用，侵删</p><p>方法一：苹果手机（最简单）</p><p>苹果手机在App Store下载抓包软件stream，及小翼管家（绑定光猫）。连接光猫WiFi</p><p> </p><p>stream软件打开HTTMS抓包，安装CA证书并信任</p><p> </p><p>点击开始抓包，打开小翼管家，点击网关设置，然后随便点击（比如指示灯，不点也可以）。</p><p>回到stream，停止抓包。点击抓包历史。全部请求找到任意一个含有token&#x3D;的POST网址并点击进去（不行就多试几个POST网址），点击右上角向上的箭头，弹出更多操作，点击编辑重放请求。</p><p> </p><p>点击最下面的请求体最下面一行，点击原始数据，删除清空并粘贴以下代码并点击存储：（注意格式）</p><p> </p><p> </p><p>{ “Params”: [], “MethodName”: “GetTAPasswd”, “RPCMethod”: “CallMethod”, “ObjectPath”: “&#x2F;com&#x2F;ctc&#x2F;igd1&#x2F;Telecom&#x2F;System”, “InterfaceName”: “com.ctc.igd1.SysCmd”, “ServiceName”: “com.ctc.igd1” }</p><p> </p><p> </p><p>最后点击右上角开始按钮，点击响应最下面的BODY即可看到（如果结果返回错误，原因是以上的代码格式不正确或者是POST网址没找对）</p><p> </p><p>注：密码格式：telecomadmin12345678，账号默认是telecomadmin。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转自&lt;a href=&quot;https://www.bilibili.com/read/cv22351257/&quot;&gt;https://www.bilibili.com/read/cv22351257/&lt;/a&gt;&lt;br&gt;自用，侵删&lt;/p&gt;
&lt;p&gt;方法一：苹果手机（最简单）&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="NAS" scheme="https://maydaychen.github.io/categories/NAS/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux系统盘扩容</title>
    <link href="https://maydaychen.github.io/2023/11/13/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E6%89%A9%E5%AE%B9/"/>
    <id>https://maydaychen.github.io/2023/11/13/Linux%E7%B3%BB%E7%BB%9F%E7%9B%98%E6%89%A9%E5%AE%B9/</id>
    <published>2023-11-13T11:13:57.000Z</published>
    <updated>2024-03-15T10:00:04.753Z</updated>
    
    <content type="html"><![CDATA[<ol><li>先在云控制台新增容量</li><li>运行下面的命令以查看根目录目前的容量</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ df -hT</span><br><span class="line">Filesystem     Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs       devtmpfs  461M     0  461M   0% /dev</span><br><span class="line">tmpfs          tmpfs     479M     0  479M   0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     479M  780K  478M   1% /run</span><br><span class="line">tmpfs          tmpfs     479M     0  479M   0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  5.6G  2.5G  70% /</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/1015</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/1014</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/0</span><br><span class="line">tmpfs          tmpfs      96M     0   96M   0% /run/user/1028</span><br></pre></td></tr></table></figure><p>运行下面的命令来查看实际容量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0  15G  0 disk</span><br><span class="line">|-nvme0n1p1   259:1    0   8G  0 part /</span><br><span class="line">`-nvme0n1p128 259:2    0   1M  0 part</span><br></pre></td></tr></table></figure><ol start="3"><li>运行下面的命令来增加容量（最后的1为目标盘在这个nvme0n1）中的序号</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ sudo growpart /dev/nvme0n1 1</span><br><span class="line">CHANGED: partition=1 start=4096 old: size=16773087 end=16777183 new: size=31453151 end=31457247</span><br></pre></td></tr></table></figure><p>为了验证容量是否已经被添加, 我们可以再次使用lsblk命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0  15G  0 disk</span><br><span class="line">|-nvme0n1p1   259:1    0  15G  0 part /</span><br><span class="line">`-nvme0n1p128 259:2    0   1M  0 part</span><br></pre></td></tr></table></figure><ol start="4"><li>根据文件系统不同运行不同的命令</li></ol><p>如果是xfs文件系统: sudo xfs_growfs  -d &#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-17-6-219 ~]$ sudo xfs_growfs -d /</span><br><span class="line">meta-data=/dev/nvme0n1p1         isize=512    agcount=4, agsize=524159 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=2096635, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 2096635 to 3931643</span><br></pre></td></tr></table></figure><p>如果是ext4文件系统:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo resize2fs /dev/nvme5n1p2</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;先在云控制台新增容量&lt;/li&gt;
&lt;li&gt;运行下面的命令以查看根目录目前的容量&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx配置反向代理时出现的13: Permission denied) while connecting to upstream, client: 127.0.0.1</title>
    <link href="https://maydaychen.github.io/2023/11/01/Nginx%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%8413-Permission-denied-while-connecting-to-upstream-client-127-0-0-1/"/>
    <id>https://maydaychen.github.io/2023/11/01/Nginx%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%8413-Permission-denied-while-connecting-to-upstream-client-127-0-0-1/</id>
    <published>2023-11-01T07:09:12.000Z</published>
    <updated>2024-03-15T10:00:04.758Z</updated>
    
    <content type="html"><![CDATA[<ol><li>条件不允许的情况下（不能随意重启计算机）执行下列代码：</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect <span class="number">1</span></span><br></pre></td></tr></table></figure><ol start="2"><li>其他情况下, 可以获取root权限，通过root修改&#x2F;etc&#x2F;selinux&#x2F;config</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">vim /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">SELINUX</span>=enforcing</span><br><span class="line">改为</span><br><span class="line"><span class="variable constant_">SELINUX</span>=disabled</span><br><span class="line"></span><br><span class="line">重启服务器</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;条件不允许的情况下（不能随意重启计算机）执行下列代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    <category term="Linux" scheme="https://maydaychen.github.io/categories/Linux/"/>
    
    
    <category term="Nginx" scheme="https://maydaychen.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>通过hexo更新github pages博客</title>
    <link href="https://maydaychen.github.io/2023/10/12/%E9%80%9A%E8%BF%87hexo%E6%9B%B4%E6%96%B0github-pages%E5%8D%9A%E5%AE%A2/"/>
    <id>https://maydaychen.github.io/2023/10/12/%E9%80%9A%E8%BF%87hexo%E6%9B%B4%E6%96%B0github-pages%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-10-12T07:23:01.000Z</published>
    <updated>2024-03-15T09:40:42.319Z</updated>
    
    <content type="html"><![CDATA[<p>#文件生成及编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>通过该命令行，可以在 “博客所在路径\source_posts\”下生成一个md文件，文件名称为上面命令行所输入的文章标题</p><p>由于生成的是markdown格式的文件，所以建议使用一个markdown编写完成后，复制粘贴到该md文件中。</p><p>#文件发布<br>编辑完成后，在命令行输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>文章就会发布到本地，然后通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>将文件变化发布到本地环境，此时可以通过访问localhost:4000，查看自己博客相关变化</p><p>#同步到GitHub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>成功同步到GitHub（前提是跟GitHub已经配对）！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#文件生成及编辑&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;</summary>
      
    
    
    
    <category term="博客相关" scheme="https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Hexo" scheme="https://maydaychen.github.io/tags/Hexo/"/>
    
    <category term="插件" scheme="https://maydaychen.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>hexo g报错 Cannot read properties of undefined (reading &#39;count&#39;)</title>
    <link href="https://maydaychen.github.io/2023/08/27/Hexo-g%E6%8A%A5%E9%94%99-Cannot-read-properties-of-undefined-reading-count_chenyideMacBook-Pro.local_Mar-15-233718-2024_CaseConflict/"/>
    <id>https://maydaychen.github.io/2023/08/27/Hexo-g%E6%8A%A5%E9%94%99-Cannot-read-properties-of-undefined-reading-count_chenyideMacBook-Pro.local_Mar-15-233718-2024_CaseConflict/</id>
    <published>2023-08-27T14:07:18.000Z</published>
    <updated>2023-08-27T14:12:50.029Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在编译博客的时候，发现了一个问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError: Cannot read properties of undefined (reading &#x27;</span>count<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    at module.exports (/Users/xxx/Documents/blog/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41)</span></span><br><span class="line"><span class="string">    at Hexo.tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Hexo.&lt;anonymous&gt; (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/method.js:15:34)</span></span><br><span class="line"><span class="string">    at /Users/xxx/Documents/blog/node_modules/hexo/lib/hexo/index.js:407:22</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at MappingPromiseArray._promiseFulfilled (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:68:38)</span></span><br><span class="line"><span class="string">    at PromiseArray._iterate (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:115:31)</span></span><br><span class="line"><span class="string">    at MappingPromiseArray.init (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/promise_array.js:79:10)</span></span><br><span class="line"><span class="string">    at MappingPromiseArray._asyncInit (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/map.js:37:10)</span></span><br><span class="line"><span class="string">    at _drainQueueStep (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:97:12)</span></span><br><span class="line"><span class="string">    at _drainQueue (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:86:9)</span></span><br><span class="line"><span class="string">    at Async._drainQueues (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:102:5)</span></span><br><span class="line"><span class="string">    at Async.drainQueues [as _onImmediate] (/Users/xxx/Documents/blog/node_modules/bluebird/js/release/async.js:15:14)</span></span><br><span class="line"><span class="string">    at process.processImmediate (node:internal/timers:476:21)</span></span><br></pre></td></tr></table></figure><h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g --debug</span><br></pre></td></tr></table></figure><p>通过debug模式查看问题所在，发现问题所在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">14:02:48.751 DEBUG Generator: post</span><br><span class="line">14:02:48.753 DEBUG Generator: archive</span><br><span class="line">14:02:48.753 DEBUG Generator: index</span><br><span class="line">14:02:48.754 DEBUG Generator: atom</span><br><span class="line">14:02:48.762 DEBUG Generator: baidu_url_generator</span><br><span class="line">14:02:48.763 FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure><h2 id="Issue-Link"><a href="#Issue-Link" class="headerlink" title="Issue Link"></a>Issue Link</h2><p><a href="https://github.com/hexojs/hexo/issues/2402">https://github.com/hexojs/hexo/issues/2402</a></p><h2 id="该插件的相关文档"><a href="#该插件的相关文档" class="headerlink" title="该插件的相关文档"></a>该插件的相关文档</h2><p><a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/">https://hui-wang.info/2016/10/23/Hexo插件之百度主动提交链接/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;在编译博客的时候，发现了一个问题&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla</summary>
      
    
    
    
    <category term="博客相关" scheme="https://maydaychen.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Hexo" scheme="https://maydaychen.github.io/tags/Hexo/"/>
    
    <category term="插件" scheme="https://maydaychen.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门(1)--Docker概述</title>
    <link href="https://maydaychen.github.io/2023/08/27/Docker%E5%85%A5%E9%97%A8-1-Docker%E6%A6%82%E8%BF%B0/"/>
    <id>https://maydaychen.github.io/2023/08/27/Docker%E5%85%A5%E9%97%A8-1-Docker%E6%A6%82%E8%BF%B0/</id>
    <published>2023-08-27T09:49:33.000Z</published>
    <updated>2023-08-27T10:19:52.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker与虚拟机的对比"><a href="#Docker与虚拟机的对比" class="headerlink" title="Docker与虚拟机的对比"></a>Docker与虚拟机的对比</h2><p>虚拟机技术缺点：</p><ul><li>资源占用十分多</li><li>冗余步骤多（比如开机等）</li><li>启动很慢</li></ul><p>Docker和传统虚拟机的不同： </p><ul><li>传统虚拟机需要虚拟出一个硬件，运行一整个操作系统，然后在系统上安装和运行软件</li><li>容器内的应用直接运行在宿主机，容器没有自己的内核的， 也没有虚拟硬件，所以很轻便</li><li>每个容器之间互相隔离，每个容器内都有一个属于自己的文件系统，互不影响</li></ul><h2 id="Docker组成"><a href="#Docker组成" class="headerlink" title="Docker组成"></a>Docker组成</h2><h3 id="镜像Image："><a href="#镜像Image：" class="headerlink" title="镜像Image："></a>镜像Image：</h3><p>就好比一个模版，可以通过模版来创建容器服务</p><p>通过镜像可以创建多个容器（最终服务&#x2F;项目运行就在容器中）</p><h3 id="容器Container："><a href="#容器Container：" class="headerlink" title="容器Container："></a>容器Container：</h3><p>Docker利用容器技术，独立运行一个或一组应用，通过镜像来创建</p><p>基本命令：启动，停止，删除</p><p>目前可以把容器理解为一个简易的Linux系统</p><h3 id="仓库Registry-远程仓库"><a href="#仓库Registry-远程仓库" class="headerlink" title="仓库Registry: 远程仓库"></a>仓库Registry: 远程仓库</h3><p>存放镜像的地方，就好比代码放git</p><p>仓库分为公有仓库和私有仓库</p><p>如Docker Hub(默认都是国内的，需要配置镜像加速)</p><p>云服务商都有容器服务器</p><h2 id="Docker是怎么工作的"><a href="#Docker是怎么工作的" class="headerlink" title="Docker是怎么工作的"></a>Docker是怎么工作的</h2><p>Docker是一个Client-Server架构的系统，Docker的守护进程运行在主机上，通过Socket从客户端访问</p><p>DockerServer接收到DockerClient的指令，就会执行这个指令</p><h2 id="Docker为什么比VM快"><a href="#Docker为什么比VM快" class="headerlink" title="Docker为什么比VM快"></a>Docker为什么比VM快</h2><p>Docker有着比VM更少的抽象层</p><p>Docker利用的是宿主机的内核，但VM需要加载一个分钟级别的Guest OS</p><p>所以说，新建一个容器的时候，docker不需要像VM一样重新加载一个OS的内核，省略了加载Guest OS的过程，所以会很快</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker与虚拟机的对比&quot;&gt;&lt;a href=&quot;#Docker与虚拟机的对比&quot; class=&quot;headerlink&quot; title=&quot;Docker与虚拟机的对比&quot;&gt;&lt;/a&gt;Docker与虚拟机的对比&lt;/h2&gt;&lt;p&gt;虚拟机技术缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源占用</summary>
      
    
    
    
    <category term="Docker相关" scheme="https://maydaychen.github.io/categories/Docker%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Docker" scheme="https://maydaychen.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>windows右键实现当前路径打开cmd</title>
    <link href="https://maydaychen.github.io/2022/03/17/windows%E5%8F%B3%E9%94%AE%E5%AE%9E%E7%8E%B0%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84%E6%89%93%E5%BC%80cmd/"/>
    <id>https://maydaychen.github.io/2022/03/17/windows%E5%8F%B3%E9%94%AE%E5%AE%9E%E7%8E%B0%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84%E6%89%93%E5%BC%80cmd/</id>
    <published>2022-03-17T03:49:21.000Z</published>
    <updated>2024-03-15T16:29:50.328Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="https://blog.csdn.net/wx_assa/article/details/106880806">https://blog.csdn.net/wx_assa/article/details/106880806</a></p><p>##无管理员权限的cmd<br>新建一个txt文件，并重命名为xxx.reg，并将下放代码复制到文本中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\QOpencmd\command]</span><br><span class="line">&quot;&quot;=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure><p>运行该注册表文件，在右键菜单中会多出一项 QQOpencmd，即为打开cmd的选项</p><p>##有管理员权限的cmd<br>新建文件同上，代码复制下面的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\runas]</span><br><span class="line">&quot;ShowBasedOnVelocityId&quot;=dword:00639bc8</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\runas\command]</span><br><span class="line">@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure><p>运行，在右键菜单中会多出一项 以管理员运行(A)，即为以管理员打开cmd的选项</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转自&lt;a href=&quot;https://blog.csdn.net/wx_assa/article/details/106880806&quot;&gt;https://blog.csdn.net/wx_assa/article/details/106880806&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##</summary>
      
    
    
    
    <category term="Windows" scheme="https://maydaychen.github.io/categories/Windows/"/>
    
    
  </entry>
  
  <entry>
    <title>常用Windows软件总结</title>
    <link href="https://maydaychen.github.io/2022/03/16/%E5%B8%B8%E7%94%A8Windows%E8%BD%AF%E4%BB%B6%E6%80%BB%E7%BB%93/"/>
    <id>https://maydaychen.github.io/2022/03/16/%E5%B8%B8%E7%94%A8Windows%E8%BD%AF%E4%BB%B6%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-15T16:28:34.000Z</published>
    <updated>2024-03-15T16:29:10.126Z</updated>
    
    <content type="html"><![CDATA[<p>为了每次重装电脑的时候不会遗漏相关软件，特写下此文章，提醒自己保持较高生产力</p><p>#服务器相关</p><ol><li>Xshell<br>远程连接服务器，执行相关操作<br><a href="https://www.netsarang.com/products/xsh_overview.html">https://www.netsarang.com/products/xsh_overview.html</a></li><li>FileZilla<br>服务器远程文件传输<br><a href="https://filezilla-project.org/">https://filezilla-project.org/</a></li></ol><p>#影音</p><ol><li><p>Listen1<br>支持网易云音乐&#x2F;QQ音乐&#x2F;虾米音乐三合一<br><a href="https://github.com/listen1/listen1_chrome_extension">https://github.com/listen1/listen1_chrome_extension</a></p></li><li><p>网易云音乐<br>以前很喜欢，可是现在- -版权实在太少，能听的不多，而且推荐算法工程师可能换人了……<br><a href="https://music.163.com/">https://music.163.com/</a></p></li><li><p>win10商店中的爱奇艺<br>没！有！广！告！</p></li></ol><p>#工具</p><ol><li><p>微软 To- Do<br>每日备忘记录提醒<br><a href="https://todo.microsoft.com/zh-cn">https://todo.microsoft.com/zh-cn</a></p></li><li><p>geek<br>很舒服的卸载工具<br><a href="https://geekuninstaller.com/">https://geekuninstaller.com/</a></p></li><li><p>TeamViewer<br>远程控制软件，work from home 必备<br><a href="https://www.teamviewer.com/zhCN/">https://www.teamviewer.com/zhCN/</a></p></li><li><p>notepad++<br>替代记事本良心直选<br><a href="https://notepad-plus-plus.org/">https://notepad-plus-plus.org/</a></p></li><li><p>QuickLook<br>实现mac上的预览功能<br><a href="https://github.com/QL-Win/QuickLook/releases">https://github.com/QL-Win/QuickLook/releases</a></p></li><li><p>wox<br><a href="https://www.jianshu.com/p/8fd212f5c01f">感觉写的好的一篇文章</a></p></li></ol><p><a href="https://github.com/Wox-launcher/Wox/releases">https://github.com/Wox-launcher/Wox/releases</a></p><ol start="7"><li>Q-Dir<br>同时显示四个资源管理器<br><a href="https://q-dir.en.softonic.com/">https://q-dir.en.softonic.com/</a></li></ol><hr><p>持续更新ing……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为了每次重装电脑的时候不会遗漏相关软件，特写下此文章，提醒自己保持较高生产力&lt;/p&gt;
&lt;p&gt;#服务器相关&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Xshell&lt;br&gt;远程连接服务器，执行相关操作&lt;br&gt;&lt;a href=&quot;https://www.netsarang.com/products</summary>
      
    
    
    
    <category term="Windows" scheme="https://maydaychen.github.io/categories/Windows/"/>
    
    
  </entry>
  
</feed>
